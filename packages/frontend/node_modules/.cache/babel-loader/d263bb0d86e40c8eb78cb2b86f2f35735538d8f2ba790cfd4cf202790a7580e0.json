{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\nimport { invalidateQuery } from '../../../../utils/invalidateQuery';\nimport { QUERY_KEYS } from '../../consts/app-keys.const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst todoService = new TodoService();\nexport default function TodoPageContainer() {\n  _s();\n  const location = useLocation();\n  const {\n    initialTodo\n  } = location.state;\n  console.log(location.state);\n  const [todo, setTodo] = useState(initialTodo);\n  // const queryClient = useQueryClient();\n\n  const updateTodo = async updatedTodo => {\n    await todoService.updateTodo(todo.id, updatedTodo);\n  };\n\n  // const fetchTodo = async () => {\n  //   const { data } = await todoService.getById(todoId);\n\n  //   return data;\n  // };\n\n  useEffect(() => {\n    const update = async () => {\n      await updateTodo(todo);\n    };\n    update();\n  }, [todo]);\n  invalidateQuery(QUERY_KEYS.TODOS);\n  const privateToggle = async () => {\n    console.log('private toggle');\n    const updatedTodo = {\n      ...todo\n    };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    setTodo(updatedTodo);\n  };\n  const completeToggle = () => console.log('complete toggle');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Complete: \", /*#__PURE__*/_jsxDEV(ToggleButton, {\n        isOn: todo.isCompleted,\n        onToggle: completeToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Private: \", /*#__PURE__*/_jsxDEV(ToggleButton, {\n        isOn: todo.isPrivate,\n        onToggle: privateToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoPageContainer, \"jsUV2WajGwYBw4CoTSPqvzqVHww=\", false, function () {\n  return [useLocation];\n});\n_c = TodoPageContainer;\nvar _c;\n$RefreshReg$(_c, \"TodoPageContainer\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","ToggleButton","TodoService","invalidateQuery","QUERY_KEYS","jsxDEV","_jsxDEV","Fragment","_Fragment","todoService","TodoPageContainer","_s","location","initialTodo","state","console","log","todo","setTodo","updateTodo","updatedTodo","id","update","TODOS","privateToggle","isPrivate","completeToggle","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","isOn","isCompleted","onToggle","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQueryClient } from 'react-query';\nimport { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\nimport { invalidateQuery } from '../../../../utils/invalidateQuery';\nimport { QUERY_KEYS } from '../../consts/app-keys.const';\n\nconst todoService = new TodoService();\n\nexport default function TodoPageContainer() {\n  const location = useLocation();\n  const { initialTodo } = location.state;\n  console.log(location.state);\n  const [todo, setTodo] = useState<any>(initialTodo);\n  // const queryClient = useQueryClient();\n\n  const updateTodo = async (updatedTodo: any) => {\n    await todoService.updateTodo(todo.id, updatedTodo);\n  };\n\n  // const fetchTodo = async () => {\n  //   const { data } = await todoService.getById(todoId);\n\n  //   return data;\n  // };\n\n  useEffect(() => {\n    const update = async () => {\n      await updateTodo(todo);\n    };\n    update();\n  }, [todo]);\n\n  invalidateQuery(QUERY_KEYS.TODOS);\n  const privateToggle = async () => {\n    console.log('private toggle');\n    const updatedTodo = { ...todo };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    setTodo(updatedTodo);\n  };\n  const completeToggle = () => console.log('complete toggle');\n\n  return (\n    <>\n      <h1>{todo.title}</h1>\n      <div>{todo.id}</div>\n      <div>{todo.description}</div>\n      <div>\n        Complete: <ToggleButton isOn={todo.isCompleted} onToggle={completeToggle} />\n      </div>\n      <div>\n        Private: <ToggleButton isOn={todo.isPrivate} onToggle={privateToggle} />\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}