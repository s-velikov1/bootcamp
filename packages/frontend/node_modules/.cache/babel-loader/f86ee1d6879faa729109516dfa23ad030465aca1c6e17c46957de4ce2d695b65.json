{"ast":null,"code":"import { HttpService } from '../../../services/http.service';\nimport { ROUTER_KEYS } from '../../common/consts/app-keys.const';\nexport class TodoService extends HttpService {\n  getAuthToken() {\n    const token = localStorage.getItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    return `Bearer ${token}`;\n  }\n  async getAllTodos() {\n    const config = {\n      url: '/todos'\n    };\n    const res = await this.get(config);\n    return res;\n  }\n  async getById(todoId) {\n    const config = {\n      url: `/todos/${todoId}`,\n      method: 'GET',\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n    const res = await this.get(config);\n    return res;\n  }\n  async createTodo(data) {\n    const config = {\n      url: '/todos',\n      method: 'POST',\n      data,\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n    const res = await this.post(config);\n    return res;\n  }\n  async updateTodo(todoId, data) {\n    const config = {\n      url: `/todos/${todoId}`,\n      method: 'PUT',\n      data,\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n    const res = await this.put(config);\n    return res;\n  }\n  async deleteTodo(todoId) {\n    const config = {\n      url: `/todos/${todoId}`,\n      method: 'DELETE',\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n    const res = await this.delete(config);\n    return res;\n  }\n}\nexport const defaultTodoService = new TodoService();","map":{"version":3,"names":["HttpService","ROUTER_KEYS","TodoService","getAuthToken","token","localStorage","getItem","LOGIN_TOKEN_NAME","getAllTodos","config","url","res","get","getById","todoId","method","headers","Authorization","createTodo","data","post","updateTodo","put","deleteTodo","delete","defaultTodoService"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/services/todo.service.ts"],"sourcesContent":["import { HttpService, HttpConfig } from '../../../services/http.service';\nimport { ROUTER_KEYS } from '../../common/consts/app-keys.const';\n\nexport class TodoService extends HttpService {\n  getAuthToken() {\n    const token = localStorage.getItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n\n    return `Bearer ${token}`;\n  }\n\n  async getAllTodos() {\n    const config: HttpConfig = {\n      url: '/todos'\n    };\n\n    const res = await this.get(config);\n\n    return res;\n  }\n\n  async getById(todoId: string) {\n    const config: HttpConfig = {\n      url: `/todos/${todoId}`,\n      method: 'GET',\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n\n    const res = await this.get(config);\n\n    return res;\n  }\n\n  async createTodo(data: any) {\n    const config: HttpConfig = {\n      url: '/todos',\n      method: 'POST',\n      data,\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n\n    const res = await this.post(config);\n\n    return res;\n  }\n\n  async updateTodo(todoId: string, data: any) {\n    const config: HttpConfig = {\n      url: `/todos/${todoId}`,\n      method: 'PUT',\n      data,\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n\n    const res = await this.put(config);\n\n    return res;\n  }\n\n  async deleteTodo(todoId: string) {\n    const config: HttpConfig = {\n      url: `/todos/${todoId}`,\n      method: 'DELETE',\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n\n    const res = await this.delete(config);\n\n    return res;\n  }\n}\n\nexport const defaultTodoService = new TodoService();\n"],"mappings":"AAAA,SAASA,WAAW,QAAoB,gCAAgC;AACxE,SAASC,WAAW,QAAQ,oCAAoC;AAEhE,OAAO,MAAMC,WAAW,SAASF,WAAW,CAAC;EAC3CG,YAAYA,CAAA,EAAG;IACb,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACL,WAAW,CAACM,gBAAgB,CAAC;IAEhE,OAAQ,UAASH,KAAM,EAAC;EAC1B;EAEA,MAAMI,WAAWA,CAAA,EAAG;IAClB,MAAMC,MAAkB,GAAG;MACzBC,GAAG,EAAE;IACP,CAAC;IAED,MAAMC,GAAG,GAAG,MAAM,IAAI,CAACC,GAAG,CAACH,MAAM,CAAC;IAElC,OAAOE,GAAG;EACZ;EAEA,MAAME,OAAOA,CAACC,MAAc,EAAE;IAC5B,MAAML,MAAkB,GAAG;MACzBC,GAAG,EAAG,UAASI,MAAO,EAAC;MACvBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACd,YAAY;MAClC;IACF,CAAC;IAED,MAAMQ,GAAG,GAAG,MAAM,IAAI,CAACC,GAAG,CAACH,MAAM,CAAC;IAElC,OAAOE,GAAG;EACZ;EAEA,MAAMO,UAAUA,CAACC,IAAS,EAAE;IAC1B,MAAMV,MAAkB,GAAG;MACzBC,GAAG,EAAE,QAAQ;MACbK,MAAM,EAAE,MAAM;MACdI,IAAI;MACJH,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACd,YAAY;MAClC;IACF,CAAC;IAED,MAAMQ,GAAG,GAAG,MAAM,IAAI,CAACS,IAAI,CAACX,MAAM,CAAC;IAEnC,OAAOE,GAAG;EACZ;EAEA,MAAMU,UAAUA,CAACP,MAAc,EAAEK,IAAS,EAAE;IAC1C,MAAMV,MAAkB,GAAG;MACzBC,GAAG,EAAG,UAASI,MAAO,EAAC;MACvBC,MAAM,EAAE,KAAK;MACbI,IAAI;MACJH,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACd,YAAY;MAClC;IACF,CAAC;IAED,MAAMQ,GAAG,GAAG,MAAM,IAAI,CAACW,GAAG,CAACb,MAAM,CAAC;IAElC,OAAOE,GAAG;EACZ;EAEA,MAAMY,UAAUA,CAACT,MAAc,EAAE;IAC/B,MAAML,MAAkB,GAAG;MACzBC,GAAG,EAAG,UAASI,MAAO,EAAC;MACvBC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACd,YAAY;MAClC;IACF,CAAC;IAED,MAAMQ,GAAG,GAAG,MAAM,IAAI,CAACa,MAAM,CAACf,MAAM,CAAC;IAErC,OAAOE,GAAG;EACZ;AACF;AAEA,OAAO,MAAMc,kBAAkB,GAAG,IAAIvB,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}