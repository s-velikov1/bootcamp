{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\n// import { invalidateQuery } from '../../../../utils/invalidateQuery';\n// import { QUERY_KEYS } from '../../consts/app-keys.const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoService = new TodoService();\nexport default function TodoPageContainer() {\n  _s();\n  const location = useLocation();\n  const {\n    todoId\n  } = location.state;\n  console.log(location.state);\n  // const [todo, setTodo] = useState<any>(null);\n  // const queryClient = useQueryClient();\n\n  // const updateTodo = async (updatedTodo: any) => {\n  //   await todoService.updateTodo(todoId, updatedTodo);\n  // };\n\n  const fetchTodo = async () => {\n    const {\n      data\n    } = await todoService.getById(todoId);\n    console.log(data);\n    return data;\n  };\n  const {\n    data,\n    isLoading\n  } = useQuery('todo', fetchTodo);\n  const todo = data === null || data === void 0 ? void 0 : data.data.todo;\n  const privateToggle = async () => {\n    console.log('private toggle');\n    const updatedTodo = {\n      ...todo\n    };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    // setTodo(updatedTodo);\n  };\n\n  const completeToggle = () => console.log('complete toggle');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todo.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Complete: \", /*#__PURE__*/_jsxDEV(ToggleButton, {\n          isOn: todo.isCompleted,\n          onToggle: completeToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Private: \", /*#__PURE__*/_jsxDEV(ToggleButton, {\n          isOn: todo.isPrivate,\n          onToggle: privateToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoPageContainer, \"kCGXohQ9ls3wB4jUph4UFk2qrWk=\", false, function () {\n  return [useLocation, useQuery];\n});\n_c = TodoPageContainer;\nvar _c;\n$RefreshReg$(_c, \"TodoPageContainer\");","map":{"version":3,"names":["React","useLocation","useQuery","ToggleButton","TodoService","jsxDEV","_jsxDEV","todoService","TodoPageContainer","_s","location","todoId","state","console","log","fetchTodo","data","getById","isLoading","todo","privateToggle","updatedTodo","isPrivate","completeToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","title","id","description","isOn","isCompleted","onToggle","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\n// import { invalidateQuery } from '../../../../utils/invalidateQuery';\n// import { QUERY_KEYS } from '../../consts/app-keys.const';\n\nconst todoService = new TodoService();\n\nexport default function TodoPageContainer() {\n  const location = useLocation();\n  const { todoId } = location.state;\n  console.log(location.state);\n  // const [todo, setTodo] = useState<any>(null);\n  // const queryClient = useQueryClient();\n\n  // const updateTodo = async (updatedTodo: any) => {\n  //   await todoService.updateTodo(todoId, updatedTodo);\n  // };\n\n  const fetchTodo = async () => {\n    const { data } = await todoService.getById(todoId);\n    console.log(data);\n\n    return data;\n  };\n\n  const { data, isLoading } = useQuery('todo', fetchTodo);\n  const todo = data?.data.todo;\n\n  const privateToggle = async () => {\n    console.log('private toggle');\n    const updatedTodo = { ...todo };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    // setTodo(updatedTodo);\n  };\n  const completeToggle = () => console.log('complete toggle');\n\n  return (\n    <div>\n      {isLoading ? (\n        <p>Loading..</p>\n      ) : (\n        <div>\n          <h1>{todo.title}</h1>\n          <div>{todo.id}</div>\n          <div>{todo.description}</div>\n          <div>\n            Complete: <ToggleButton isOn={todo.isCompleted} onToggle={completeToggle} />\n          </div>\n          <div>\n            Private: <ToggleButton isOn={todo.isPrivate} onToggle={privateToggle} />\n          </div>\n        </div>\n      )}\n  </div> );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}