{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTER_KEYS } from '../modules/common/consts/app-keys.const';\nimport { defaultAuthService } from '../modules/auth/services/auth.service';\nexport const useAuth = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const checkAuth = async () => {\n    try {\n      const data = await defaultAuthService.checkAuth();\n      console.log(data);\n      if (data.status !== 200) {\n        localStorage.removeItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n        // throw new Error('User not authenticated');\n        return false;\n      }\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n  const requireAuth = component => {\n    _s();\n    const navigate = useNavigate();\n    navigate(ROUTER_KEYS.LOGIN);\n    checkAuth();\n    return component;\n  };\n  _s(requireAuth, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  const login = async authData => {\n    const data = await defaultAuthService.login(authData);\n    console.log(data);\n    localStorage.setItem(ROUTER_KEYS.LOGIN_TOKEN_NAME, data === null || data === void 0 ? void 0 : data.data.token);\n    setIsLoggedIn(true);\n  };\n  const logout = () => {\n    localStorage.removeItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    setIsLoggedIn(false);\n  };\n  return {\n    isLoggedIn,\n    login,\n    logout,\n    requireAuth\n  };\n};\n_s2(useAuth, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");","map":{"version":3,"names":["useState","useNavigate","ROUTER_KEYS","defaultAuthService","useAuth","_s2","_s","$RefreshSig$","isLoggedIn","setIsLoggedIn","checkAuth","data","console","log","status","localStorage","removeItem","LOGIN_TOKEN_NAME","error","requireAuth","component","navigate","LOGIN","login","authData","setItem","token","logout"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/utils/useAuth.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTER_KEYS } from '../modules/common/consts/app-keys.const';\nimport { defaultAuthService } from '../modules/auth/services/auth.service';\n\nexport const useAuth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  \n  const checkAuth = async () => {\n    try {\n      const data = await defaultAuthService.checkAuth();\n      console.log(data);\n\n      if (data.status !== 200) {\n        localStorage.removeItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n        // throw new Error('User not authenticated');\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const requireAuth = (component: any) => {\n    const navigate = useNavigate();\n    navigate(ROUTER_KEYS.LOGIN);\n    checkAuth();\n    return component;\n  };\n\n  const login = async (authData: object) => {\n    const data = await defaultAuthService.login(authData);\n    console.log(data);\n    localStorage.setItem(ROUTER_KEYS.LOGIN_TOKEN_NAME, data?.data.token);\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    setIsLoggedIn(false);\n  };\n\n  return { isLoggedIn, login, logout, requireAuth };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,yCAAyC;AACrE,SAASC,kBAAkB,QAAQ,uCAAuC;AAE1E,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMR,kBAAkB,CAACO,SAAS,EAAE;MACjDE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,IAAIA,IAAI,CAACG,MAAM,KAAK,GAAG,EAAE;QACvBC,YAAY,CAACC,UAAU,CAACd,WAAW,CAACe,gBAAgB,CAAC;QACrD;QACA,OAAO,KAAK;MACd;MAEA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMC,WAAW,GAAIC,SAAc,IAAK;IAAAd,EAAA;IACtC,MAAMe,QAAQ,GAAGpB,WAAW,EAAE;IAC9BoB,QAAQ,CAACnB,WAAW,CAACoB,KAAK,CAAC;IAC3BZ,SAAS,EAAE;IACX,OAAOU,SAAS;EAClB,CAAC;EAACd,EAAA,CALIa,WAAW;IAAA,QACElB,WAAW;EAAA;EAM9B,MAAMsB,KAAK,GAAG,MAAOC,QAAgB,IAAK;IACxC,MAAMb,IAAI,GAAG,MAAMR,kBAAkB,CAACoB,KAAK,CAACC,QAAQ,CAAC;IACrDZ,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBI,YAAY,CAACU,OAAO,CAACvB,WAAW,CAACe,gBAAgB,EAAEN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAACe,KAAK,CAAC;IACpEjB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMkB,MAAM,GAAGA,CAAA,KAAM;IACnBZ,YAAY,CAACC,UAAU,CAACd,WAAW,CAACe,gBAAgB,CAAC;IACrDR,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,OAAO;IAAED,UAAU;IAAEe,KAAK;IAAEI,MAAM;IAAER;EAAY,CAAC;AACnD,CAAC;AAACd,GAAA,CAxCWD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}