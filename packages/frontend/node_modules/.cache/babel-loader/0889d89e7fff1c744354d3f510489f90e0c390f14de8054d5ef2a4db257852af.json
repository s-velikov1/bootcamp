{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/actions/toggle.styled.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = styled.label`\n  display: inline-block;\n  position: relative;\n  width: 48px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: ${_ref => {\n  let {\n    isOn\n  } = _ref;\n  return isOn ? '#6abf69' : '#ccc';\n}};\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: ${_ref2 => {\n  let {\n    isOn\n  } = _ref2;\n  return isOn ? '26px' : '2px';\n}};\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #fff;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    transition: left 0.3s ease;\n  }\n`;\n_c = ToggleSwitch;\nconst ToggleInput = styled.input.attrs({\n  type: 'checkbox'\n})`\n  display: none;\n`;\n_c2 = ToggleInput;\nexport default function ToggleButton() {\n  _s();\n  const [isOn, setIsOn] = useState(false);\n  const handleToggle = e => {\n    e.stopPropagation();\n    setIsOn(!isOn);\n    console.log('toggle');\n  };\n  return /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n    isOn: isOn,\n    onClick: handleToggle,\n    children: /*#__PURE__*/_jsxDEV(ToggleInput, {\n      type: \"checkbox\",\n      checked: isOn,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleButton, \"781ncfT5EimMrsq5ZStDBlx1pwQ=\");\n_c3 = ToggleButton;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ToggleSwitch\");\n$RefreshReg$(_c2, \"ToggleInput\");\n$RefreshReg$(_c3, \"ToggleButton\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","ToggleSwitch","label","_ref","isOn","_ref2","_c","ToggleInput","input","attrs","type","_c2","ToggleButton","_s","setIsOn","handleToggle","e","stopPropagation","console","log","onClick","children","checked","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/actions/toggle.styled.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\ninterface ToggleSwitchProps {\n  isOn: boolean;\n}\n\nconst ToggleSwitch = styled.label<ToggleSwitchProps>`\n  display: inline-block;\n  position: relative;\n  width: 48px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: ${({ isOn }) => (isOn ? '#6abf69' : '#ccc')};\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: ${({ isOn }) => (isOn ? '26px' : '2px')};\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #fff;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    transition: left 0.3s ease;\n  }\n`;\n\nconst ToggleInput = styled.input.attrs({ type: 'checkbox' })`\n  display: none;\n`;\n\nexport default function ToggleButton() {\n  const [isOn, setIsOn] = useState(false);\n\n  const handleToggle = (e: any) => {\n    e.stopPropagation();\n    setIsOn(!isOn);\n    console.log('toggle');\n  };\n\n  return (\n    <ToggleSwitch isOn={isOn} onClick={handleToggle}>\n      <ToggleInput type=\"checkbox\" checked={isOn} readOnly />\n    </ToggleSwitch>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,KAAyB;AACrD;AACA;AACA;AACA;AACA;AACA,sBAAsBC,IAAA;EAAA,IAAC;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAAA,OAAMC,IAAI,GAAG,SAAS,GAAG,MAAM;AAAA,CAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYC,KAAA;EAAA,IAAC;IAAED;EAAK,CAAC,GAAAC,KAAA;EAAA,OAAMD,IAAI,GAAG,MAAM,GAAG,KAAK;AAAA,CAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,EAAA,GAtBIL,YAAY;AAwBlB,MAAMM,WAAW,GAAGT,MAAM,CAACU,KAAK,CAACC,KAAK,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,CAAE;AAC7D;AACA,CAAC;AAACC,GAAA,GAFIJ,WAAW;AAIjB,eAAe,SAASK,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACT,IAAI,EAAEU,OAAO,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMkB,YAAY,GAAIC,CAAM,IAAK;IAC/BA,CAAC,CAACC,eAAe,EAAE;IACnBH,OAAO,CAAC,CAACV,IAAI,CAAC;IACdc,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC;EAED,oBACEnB,OAAA,CAACC,YAAY;IAACG,IAAI,EAAEA,IAAK;IAACgB,OAAO,EAAEL,YAAa;IAAAM,QAAA,eAC9CrB,OAAA,CAACO,WAAW;MAACG,IAAI,EAAC,UAAU;MAACY,OAAO,EAAElB,IAAK;MAACmB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAEnB;AAACd,EAAA,CAduBD,YAAY;AAAAgB,GAAA,GAAZhB,YAAY;AAAA,IAAAN,EAAA,EAAAK,GAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}