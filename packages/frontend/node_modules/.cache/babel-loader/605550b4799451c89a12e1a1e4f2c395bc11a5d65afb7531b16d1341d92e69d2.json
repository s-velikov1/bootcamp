{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/TodoContainer.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport TodoDesktopInner from './desktop/todoDesktopInner.component';\nimport NewButton from './actions/newButton.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoContainer() {\n  _s();\n  const isMobile = useMediaQuery({\n    minWidth: 320\n  });\n  const isTablet = useMediaQuery({\n    minWidth: 768\n  });\n  const isDesktop = useMediaQuery({\n    minWidth: 1444\n  });\n\n  // TODO: return element for each case from high to low width\n\n  if (isDesktop) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TodoDesktopInner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isMobile && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is mobile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this), isTablet && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is tablet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoContainer, \"VnrD+rxO92sEUdqmVfxLP4ITEso=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery];\n});\n_c = TodoContainer;\nvar _c;\n$RefreshReg$(_c, \"TodoContainer\");","map":{"version":3,"names":["React","useMediaQuery","TodoDesktopInner","NewButton","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoContainer","_s","isMobile","minWidth","isTablet","isDesktop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/TodoContainer.tsx"],"sourcesContent":["import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport TodoDesktopInner from './desktop/todoDesktopInner.component';\nimport NewButton from './actions/newButton.component';\n\nexport default function TodoContainer() {\n  const isMobile = useMediaQuery({ minWidth: 320 });\n  const isTablet = useMediaQuery({ minWidth: 768 });\n  const isDesktop = useMediaQuery({ minWidth: 1444 });\n\n  // TODO: return element for each case from high to low width\n\n  if (isDesktop) {\n    return (\n      <>\n        <TodoDesktopInner />\n        <NewButton />\n      </>\n    );\n  }\n  return (\n    <>\n      {isMobile && <h1>This is mobile</h1>}\n      {isTablet && <h1>This is tablet</h1>}\n      {/* {isDesktop && <TodoDesktopInner />} */}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,OAAOC,SAAS,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGT,aAAa,CAAC;IAAEU,QAAQ,EAAE;EAAI,CAAC,CAAC;EACjD,MAAMC,QAAQ,GAAGX,aAAa,CAAC;IAAEU,QAAQ,EAAE;EAAI,CAAC,CAAC;EACjD,MAAME,SAAS,GAAGZ,aAAa,CAAC;IAAEU,QAAQ,EAAE;EAAK,CAAC,CAAC;;EAEnD;;EAEA,IAAIE,SAAS,EAAE;IACb,oBACER,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACET,OAAA,CAACH,gBAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpBb,OAAA,CAACF,SAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA,gBACZ;EAEP;EACA,oBACEb,OAAA,CAAAE,SAAA;IAAAO,QAAA,GACGJ,QAAQ,iBAAIL,OAAA;MAAAS,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACnCN,QAAQ,iBAAIP,OAAA;MAAAS,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA,gBAEnC;AAEP;AAACT,EAAA,CAtBuBD,aAAa;EAAA,QAClBP,aAAa,EACbA,aAAa,EACZA,aAAa;AAAA;AAAAkB,EAAA,GAHTX,aAAa;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}