{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/forms/update-todo-form.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport { useQueryClient } from 'react-query';\nimport { FormContainer } from './form.container.styled';\nimport { defaultTodoService } from '../services/todo.service';\nimport { createTodoValidation } from './validation/todo-validation';\nimport { QUERY_KEYS } from '../../common/consts/app-keys.const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateTodoForm = _ref => {\n  _s();\n  let {\n    todo,\n    setter\n  } = _ref;\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submissionError, setSubmissionError] = useState(null);\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n  const queryClient = useQueryClient();\n  const config = {\n    initialValues: todo,\n    onSubmit: () => {}\n  };\n  const formik = useFormik(config);\n  const onSubmit = async (values, actions) => {\n    actions.setSubmitting(true);\n    try {\n      await defaultTodoService.updateTodo(todo.id, formik.values);\n      actions.resetForm();\n      setSubmissionSuccess(true);\n      actions.setStatus(null);\n      queryClient.refetchQueries([QUERY_KEYS.TODOS, QUERY_KEYS.TODOID]);\n      if (setter) {\n        setter(false);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        setSubmissionError(error.message);\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: todo,\n    validationSchema: createTodoValidation,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"title\",\n          name: \"title\",\n          onChange: formik.handleChange,\n          value: formik.values.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"description\",\n          name: \"description\",\n          onChange: formik.handleChange,\n          value: formik.values.description,\n          as: \"textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"description\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isCompleted\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"isCompleted\",\n          name: \"isCompleted\",\n          type: \"checkbox\",\n          onChange: formik.handleChange,\n          checked: formik.values.isCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isPrivate\",\n          children: \"Private\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"isPrivate\",\n          name: \"isPrivate\",\n          type: \"checkbox\",\n          onChange: formik.handleChange,\n          checked: formik.values.isPrivate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), submissionSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Todo updated successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this), submissionError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error ocurred while creating todo! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 50\n          }, this), \" \", submissionError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isSubmitting ? 'Updating...' : 'Update'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateTodoForm, \"USbs1drzfumsfPCLWpZ5eVI3bNc=\", false, function () {\n  return [useQueryClient, useFormik];\n});\n_c = UpdateTodoForm;\nexport default UpdateTodoForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateTodoForm\");","map":{"version":3,"names":["React","useState","Formik","Field","Form","ErrorMessage","useFormik","useQueryClient","FormContainer","defaultTodoService","createTodoValidation","QUERY_KEYS","jsxDEV","_jsxDEV","UpdateTodoForm","_ref","_s","todo","setter","isSubmitting","setIsSubmitting","submissionError","setSubmissionError","submissionSuccess","setSubmissionSuccess","queryClient","config","initialValues","onSubmit","formik","values","actions","setSubmitting","updateTodo","id","resetForm","setStatus","refetchQueries","TODOS","TODOID","error","Error","message","validationSchema","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","handleChange","value","title","component","description","as","type","checked","isCompleted","isPrivate","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/forms/update-todo-form.component.tsx"],"sourcesContent":["import React, { useState, Dispatch, SetStateAction } from 'react';\nimport { Formik, Field, Form, ErrorMessage, FormikHelpers, useFormik, FormikConfig } from 'formik';\nimport { useQueryClient } from 'react-query';\nimport { FormContainer } from './form.container.styled';\nimport { defaultTodoService } from '../services/todo.service';\nimport { ITodo, TodoProps } from '../types/todo.types';\nimport { createTodoValidation } from './validation/todo-validation';\nimport { QUERY_KEYS } from '../../common/consts/app-keys.const';\n\ninterface PropsWithSetter extends TodoProps {\n  setter?: Dispatch<SetStateAction<boolean>>;\n}\n\nconst UpdateTodoForm = ({ todo, setter }: PropsWithSetter) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submissionError, setSubmissionError] = useState<string | null>(null);\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n  const queryClient = useQueryClient();\n\n  const config: FormikConfig<ITodo> = {\n    initialValues: todo,\n    onSubmit: () => {}\n  };\n\n  const formik = useFormik<ITodo>(config);\n  const onSubmit = async (values: ITodo, actions: FormikHelpers<ITodo>) => {\n    actions.setSubmitting(true);\n    try {\n      await defaultTodoService.updateTodo(todo.id, formik.values);\n      actions.resetForm();\n      setSubmissionSuccess(true);\n      actions.setStatus(null);\n      queryClient.refetchQueries([QUERY_KEYS.TODOS, QUERY_KEYS.TODOID]);\n\n      if (setter) {\n        setter(false);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        setSubmissionError(error.message);\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik initialValues={todo} validationSchema={createTodoValidation} onSubmit={onSubmit}>\n      <FormContainer>\n        <Form>\n          <label htmlFor=\"title\">Title</label>\n          <Field\n            id=\"title\"\n            name=\"title\"\n            onChange={formik.handleChange}\n            value={formik.values.title}\n          />\n          <ErrorMessage name=\"title\" component=\"div\" />\n\n          <label htmlFor=\"description\">Description</label>\n          <Field\n            id=\"description\"\n            name=\"description\"\n            onChange={formik.handleChange}\n            value={formik.values.description}\n            as=\"textarea\"\n          />\n          <ErrorMessage name=\"description\" component=\"div\" />\n\n          <label htmlFor=\"isCompleted\">Completed</label>\n          <Field\n            id=\"isCompleted\"\n            name=\"isCompleted\"\n            type=\"checkbox\"\n            onChange={formik.handleChange}\n            checked={formik.values.isCompleted}\n          />\n\n          <label htmlFor=\"isPrivate\">Private</label>\n          <Field\n            id=\"isPrivate\"\n            name=\"isPrivate\"\n            type=\"checkbox\"\n            onChange={formik.handleChange}\n            checked={formik.values.isPrivate}\n          />\n\n          {submissionSuccess && <div>Todo updated successfully</div>}\n          {submissionError && (\n            <div>\n              Error ocurred while creating todo! <br /> {submissionError}\n            </div>\n          )}\n\n          <button type=\"submit\">{isSubmitting ? 'Updating...' : 'Update'}</button>\n        </Form>\n      </FormContainer>\n    </Formik>\n  );\n};\n\nexport default UpdateTodoForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}