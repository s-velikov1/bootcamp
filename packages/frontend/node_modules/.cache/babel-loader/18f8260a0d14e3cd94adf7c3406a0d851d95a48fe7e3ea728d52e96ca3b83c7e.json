{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/home/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport { useMediaQuery } from 'react-responsive';\nimport TodoContainer from '../common/components/todo/TodoContainer';\nimport { TodoService } from '../../services/TodoService';\nimport { QUERY_KEYS } from '../common/consts/app-keys.const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst todoService = new TodoService();\nasync function fetchTodos() {\n  const {\n    data\n  } = await todoService.getAllTodos();\n  return data;\n}\nconst HomePageContainer = () => {\n  _s();\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(QUERY_KEYS.TODOS, fetchTodos);\n  const isMobile = useMediaQuery({\n    minWidth: 320,\n    maxWidth: 425\n  });\n  const isTablet = useMediaQuery({\n    minWidth: 425,\n    maxWidth: 768\n  });\n  const isDesktop = useMediaQuery({\n    minWidth: 768,\n    maxWidth: 2560\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Is loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Error, can not fetch todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"React is ready HOME!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isMobile && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is mobile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }, this), isTablet && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is tablet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this), isDesktop && /*#__PURE__*/_jsxDEV(TodoContainer, {\n      todos: data === null || data === void 0 ? void 0 : data.data.todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePageContainer, \"Ep8efZPkjWr+NeFSJNJFLcW7hfg=\", false, function () {\n  return [useQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n_c = HomePageContainer;\nexport default HomePageContainer;\nvar _c;\n$RefreshReg$(_c, \"HomePageContainer\");","map":{"version":3,"names":["React","useQuery","useMediaQuery","TodoContainer","TodoService","QUERY_KEYS","jsxDEV","_jsxDEV","Fragment","_Fragment","todoService","fetchTodos","data","getAllTodos","HomePageContainer","_s","isLoading","error","TODOS","isMobile","minWidth","maxWidth","isTablet","isDesktop","children","fileName","_jsxFileName","lineNumber","columnNumber","todos","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/home/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useMediaQuery } from 'react-responsive';\nimport TodoContainer from '../common/components/todo/TodoContainer';\nimport { TodoService } from '../../services/TodoService';\nimport { QUERY_KEYS } from '../common/consts/app-keys.const';\n\nconst todoService = new TodoService();\n\nasync function fetchTodos() {\n  const { data } = await todoService.getAllTodos();\n  return data;\n}\n\nconst HomePageContainer = () => {\n  const { isLoading, error, data } = useQuery(QUERY_KEYS.TODOS, fetchTodos);\n  const isMobile = useMediaQuery({ minWidth: 320, maxWidth: 425 });\n  const isTablet = useMediaQuery({ minWidth: 425, maxWidth: 768 });\n  const isDesktop = useMediaQuery({ minWidth: 768, maxWidth: 2560 });\n\n  if (isLoading) {\n    return <h1>Is loading...</h1>;\n  }\n\n  if (error) {\n    return <h3>Error, can not fetch todos</h3>;\n  }\n\n  return (\n    <>\n      <div>React is ready HOME!</div>\n      {isMobile && <h1>This is mobile</h1>}\n      {isTablet && <h1>This is tablet</h1>}\n      {isDesktop && <TodoContainer todos={data?.data.todos} />}\n    </>\n  );\n};\n\nexport default HomePageContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,aAAa,MAAM,yCAAyC;AACnE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,UAAU,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,WAAW,GAAG,IAAIN,WAAW,EAAE;AAErC,eAAeO,UAAUA,CAAA,EAAG;EAC1B,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMF,WAAW,CAACG,WAAW,EAAE;EAChD,OAAOD,IAAI;AACb;AAEA,MAAME,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEL;EAAK,CAAC,GAAGX,QAAQ,CAACI,UAAU,CAACa,KAAK,EAAEP,UAAU,CAAC;EACzE,MAAMQ,QAAQ,GAAGjB,aAAa,CAAC;IAAEkB,QAAQ,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAI,CAAC,CAAC;EAChE,MAAMC,QAAQ,GAAGpB,aAAa,CAAC;IAAEkB,QAAQ,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAI,CAAC,CAAC;EAChE,MAAME,SAAS,GAAGrB,aAAa,CAAC;IAAEkB,QAAQ,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EAElE,IAAIL,SAAS,EAAE;IACb,oBAAOT,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC/B;EAEA,IAAIX,KAAK,EAAE;IACT,oBAAOV,OAAA;MAAAiB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC5C;EAEA,oBACErB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EAC9BT,QAAQ,iBAAIZ,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACnCN,QAAQ,iBAAIf,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACnCL,SAAS,iBAAIhB,OAAA,CAACJ,aAAa;MAAC0B,KAAK,EAAEjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAACiB;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACvD;AAEP,CAAC;AAACb,EAAA,CAtBID,iBAAiB;EAAA,QACcb,QAAQ,EAC1BC,aAAa,EACbA,aAAa,EACZA,aAAa;AAAA;AAAA4B,EAAA,GAJ3BhB,iBAAiB;AAwBvB,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}