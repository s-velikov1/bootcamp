{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/forms/create-todo-form.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { FormContainer } from './form.container.styled';\nimport { createTodoValidation } from './validation/todo-validation';\nimport { defaultTodoService } from '../services/todo.service';\nimport { createTodoValues } from './init-values';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTodoForm = () => {\n  _s();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submissionError, setSubmissionError] = useState(null);\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n  const onSubmit = async (values, actions) => {\n    actions.setSubmitting(true);\n    try {\n      await defaultTodoService.createTodo(values);\n      actions.resetForm();\n      setSubmissionSuccess(true);\n      actions.setStatus(null);\n    } catch (error) {\n      if (error instanceof Error) {\n        setSubmissionError(error.message);\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: createTodoValues,\n    validationSchema: createTodoValidation,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"Type title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"description\",\n          name: \"description\",\n          as: \"textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"description\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isCompleted\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"isCompleted\",\n          name: \"isCompleted\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isPrivate\",\n          children: \"Private\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"isPrivate\",\n          name: \"isPrivate\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), submissionSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Todo created successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this), submissionError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error ocurred while creating todo! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 50\n          }, this), \" \", submissionError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isSubmitting ? 'Creating...' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTodoForm, \"6EQ3lCWSzruYrVO2e7OQChv6uHc=\");\n_c = CreateTodoForm;\nexport default CreateTodoForm;\nvar _c;\n$RefreshReg$(_c, \"CreateTodoForm\");","map":{"version":3,"names":["React","useState","Formik","Field","Form","ErrorMessage","FormContainer","createTodoValidation","defaultTodoService","createTodoValues","jsxDEV","_jsxDEV","CreateTodoForm","_s","isSubmitting","setIsSubmitting","submissionError","setSubmissionError","submissionSuccess","setSubmissionSuccess","onSubmit","values","actions","setSubmitting","createTodo","resetForm","setStatus","error","Error","message","initialValues","validationSchema","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","placeholder","component","as","type","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/forms/create-todo-form.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage, FormikHelpers } from 'formik';\nimport { FormContainer } from './form.container.styled';\nimport { createTodoValidation } from './validation/todo-validation';\nimport { defaultTodoService } from '../services/todo.service';\nimport { ITodoForm } from '../types/todo.types';\nimport { createTodoValues } from './init-values';\n\nconst CreateTodoForm = () => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submissionError, setSubmissionError] = useState<string | null>(null);\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n\n  const onSubmit = async (values: ITodoForm, actions: FormikHelpers<ITodoForm>) => {\n    actions.setSubmitting(true);\n    try {\n      await defaultTodoService.createTodo(values);\n      actions.resetForm();\n      setSubmissionSuccess(true);\n      actions.setStatus(null);\n    } catch (error) {\n      if (error instanceof Error) {\n        setSubmissionError(error.message);\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={createTodoValues}\n      validationSchema={createTodoValidation}\n      onSubmit={onSubmit}\n    >\n      <FormContainer>\n        <Form>\n          <label htmlFor=\"title\">Title</label>\n          <Field id=\"title\" name=\"title\" placeholder=\"Type title\" />\n          <ErrorMessage name=\"title\" component=\"div\" />\n\n          <label htmlFor=\"description\">Description</label>\n          <Field id=\"description\" name=\"description\" as=\"textarea\" />\n          <ErrorMessage name=\"description\" component=\"div\" />\n\n          <label htmlFor=\"isCompleted\">Completed</label>\n          <Field id=\"isCompleted\" name=\"isCompleted\" type=\"checkbox\" />\n\n          <label htmlFor=\"isPrivate\">Private</label>\n          <Field id=\"isPrivate\" name=\"isPrivate\" type=\"checkbox\" />\n\n          {submissionSuccess && <div>Todo created successfully</div>}\n          {submissionError && (\n            <div>\n              Error ocurred while creating todo! <br /> {submissionError}\n            </div>\n          )}\n\n          <button type=\"submit\">{isSubmitting ? 'Creating...' : 'Create'}</button>\n        </Form>\n      </FormContainer>\n    </Formik>\n  );\n};\n\nexport default CreateTodoForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}