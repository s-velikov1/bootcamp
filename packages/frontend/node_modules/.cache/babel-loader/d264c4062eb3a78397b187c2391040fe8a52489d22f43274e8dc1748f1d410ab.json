{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\n// import { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\n// import { invalidateQuery } from '../../../../utils/invalidateQuery';\n// import { QUERY_KEYS } from '../../consts/app-keys.const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoService = new TodoService();\nexport default function TodoPageContainer() {\n  _s();\n  const location = useLocation();\n  const {\n    todoId\n  } = location.state;\n  console.log(location.state);\n  // const [todo, setTodo] = useState<any>(null);\n  // const queryClient = useQueryClient();\n\n  // const updateTodo = async (updatedTodo: any) => {\n  //   await todoService.updateTodo(todoId, updatedTodo);\n  // };\n\n  const fetchTodo = async () => {\n    const {\n      data\n    } = await todoService.getById(todoId);\n    console.log(data);\n    return data;\n  };\n  const {\n    data,\n    isLoading\n  } = useQuery('todo', fetchTodo);\n  const todo = data === null || data === void 0 ? void 0 : data.data.todo;\n\n  // const privateToggle = async () => {\n  //   console.log('private toggle');\n  //   const updatedTodo = { ...todo };\n  //   updatedTodo.isPrivate = !updatedTodo.isPrivate;\n  //   setTodo(updatedTodo);\n  // };\n  // const completeToggle = () => console.log('complete toggle');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: todo.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 47\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n_s(TodoPageContainer, \"kCGXohQ9ls3wB4jUph4UFk2qrWk=\", false, function () {\n  return [useLocation, useQuery];\n});\n_c = TodoPageContainer;\nvar _c;\n$RefreshReg$(_c, \"TodoPageContainer\");","map":{"version":3,"names":["React","useLocation","useQuery","TodoService","jsxDEV","_jsxDEV","todoService","TodoPageContainer","_s","location","todoId","state","console","log","fetchTodo","data","getById","isLoading","todo","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\n// import { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\n// import { invalidateQuery } from '../../../../utils/invalidateQuery';\n// import { QUERY_KEYS } from '../../consts/app-keys.const';\n\nconst todoService = new TodoService();\n\nexport default function TodoPageContainer() {\n  const location = useLocation();\n  const { todoId } = location.state;\n  console.log(location.state);\n  // const [todo, setTodo] = useState<any>(null);\n  // const queryClient = useQueryClient();\n\n  // const updateTodo = async (updatedTodo: any) => {\n  //   await todoService.updateTodo(todoId, updatedTodo);\n  // };\n\n  const fetchTodo = async () => {\n    const { data } = await todoService.getById(todoId);\n    console.log(data);\n\n    return data;\n  };\n\n  const { data, isLoading } = useQuery('todo', fetchTodo);\n  const todo = data?.data.todo;\n\n  // const privateToggle = async () => {\n  //   console.log('private toggle');\n  //   const updatedTodo = { ...todo };\n  //   updatedTodo.isPrivate = !updatedTodo.isPrivate;\n  //   setTodo(updatedTodo);\n  // };\n  // const completeToggle = () => console.log('complete toggle');\n\n  return <div>{isLoading ? <p>Loading..</p> : <p>{todo.id}</p>}</div>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA,SAASC,WAAW,QAAQ,kCAAkC;AAC9D;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAW,EAAE;AAErC,eAAe,SAASI,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES;EAAO,CAAC,GAAGD,QAAQ,CAACE,KAAK;EACjCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,KAAK,CAAC;EAC3B;EACA;;EAEA;EACA;EACA;;EAEA,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,WAAW,CAACU,OAAO,CAACN,MAAM,CAAC;IAClDE,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IAEjB,OAAOA,IAAI;EACb,CAAC;EAED,MAAM;IAAEA,IAAI;IAAEE;EAAU,CAAC,GAAGf,QAAQ,CAAC,MAAM,EAAEY,SAAS,CAAC;EACvD,MAAMI,IAAI,GAAGH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAACG,IAAI;;EAE5B;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAOb,OAAA;IAAAc,QAAA,EAAMF,SAAS,gBAAGZ,OAAA;MAAAc,QAAA,EAAG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAAGlB,OAAA;MAAAc,QAAA,EAAID,IAAI,CAACM;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACrE;AAACf,EAAA,CA9BuBD,iBAAiB;EAAA,QACtBN,WAAW,EAiBAC,QAAQ;AAAA;AAAAuB,EAAA,GAlBdlB,iBAAiB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}