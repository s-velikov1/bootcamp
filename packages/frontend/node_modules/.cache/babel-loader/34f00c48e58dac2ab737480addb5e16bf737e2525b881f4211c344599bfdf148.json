{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TodoMainContainer from './containers/todo-main.container';\n// import { defaultTodoService } from './services/todo.service';\n// import { QUERY_KEYS } from '../common/consts/app-keys.const';\nimport { DefaultPageContainer } from '../default/defaultPageContainer.styled';\nimport { useTodos } from '../../utils/useTodos';\n\n// async function fetchTodos() {\n//   const { data } = await defaultTodoService.getAllTodos();\n\n//   return data.data.todos;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePageContainer = () => {\n  _s();\n  // const { isLoading, error } = useQuery(QUERY_KEYS.TODOS, fetchTodos);\n  const {\n    isLoading,\n    error\n  } = useTodos();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Is loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Error, can not fetch todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DefaultPageContainer, {\n    children: /*#__PURE__*/_jsxDEV(TodoMainContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePageContainer, \"ZT4JzgZu/H7ylN2vD5PWVnQSWo4=\", false, function () {\n  return [useTodos];\n});\n_c = HomePageContainer;\nexport default HomePageContainer;\nvar _c;\n$RefreshReg$(_c, \"HomePageContainer\");","map":{"version":3,"names":["React","TodoMainContainer","DefaultPageContainer","useTodos","jsxDEV","_jsxDEV","HomePageContainer","_s","isLoading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\nimport TodoMainContainer from './containers/todo-main.container';\n// import { defaultTodoService } from './services/todo.service';\n// import { QUERY_KEYS } from '../common/consts/app-keys.const';\nimport { DefaultPageContainer } from '../default/defaultPageContainer.styled';\nimport { useTodos } from '../../utils/useTodos';\n\n// async function fetchTodos() {\n//   const { data } = await defaultTodoService.getAllTodos();\n\n//   return data.data.todos;\n// }\n\nconst HomePageContainer = () => {\n  // const { isLoading, error } = useQuery(QUERY_KEYS.TODOS, fetchTodos);\n  const { isLoading, error } = useTodos();\n\n  if (isLoading) {\n    return <h1>Is loading...</h1>;\n  }\n\n  if (error) {\n    return <h3>Error, can not fetch todos</h3>;\n  }\n\n  return (\n    <DefaultPageContainer>\n      <TodoMainContainer />\n    </DefaultPageContainer>\n  );\n};\n\nexport default HomePageContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE;AACA;AACA,SAASC,oBAAoB,QAAQ,wCAAwC;AAC7E,SAASC,QAAQ,QAAQ,sBAAsB;;AAE/C;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B;EACA,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGN,QAAQ,EAAE;EAEvC,IAAIK,SAAS,EAAE;IACb,oBAAOH,OAAA;MAAAK,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC/B;EAEA,IAAIL,KAAK,EAAE;IACT,oBAAOJ,OAAA;MAAAK,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC5C;EAEA,oBACET,OAAA,CAACH,oBAAoB;IAAAQ,QAAA,eACnBL,OAAA,CAACJ,iBAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAE3B,CAAC;AAACP,EAAA,CAjBID,iBAAiB;EAAA,QAEQH,QAAQ;AAAA;AAAAY,EAAA,GAFjCT,iBAAiB;AAmBvB,eAAeA,iBAAiB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}