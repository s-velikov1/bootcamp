{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/components/complete-toggle.component.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ToggleButton } from './toggle.component';\nimport { useUpdateTodo } from '../../../utils/useUpdateTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompleteToggle = _ref => {\n  _s();\n  let {\n    todo\n  } = _ref;\n  console.log(todo.todo);\n  const {\n    updateTodoMutation\n  } = useUpdateTodo();\n  const completeToggle = async () => {\n    const {\n      id\n    } = todo;\n    todo.isCompleted = !todo.isCompleted;\n    updateTodoMutation.mutate({\n      todoId: id,\n      data: todo\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ToggleButton, {\n    isOn: todo.isCompleted,\n    onToggle: completeToggle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_s(CompleteToggle, \"N6UpypJe4ZpPKjPivaWuYcj0hXc=\", false, function () {\n  return [useUpdateTodo];\n});\n_c = CompleteToggle;\nvar _c;\n$RefreshReg$(_c, \"CompleteToggle\");","map":{"version":3,"names":["React","ToggleButton","useUpdateTodo","jsxDEV","_jsxDEV","CompleteToggle","_ref","_s","todo","console","log","updateTodoMutation","completeToggle","id","isCompleted","mutate","todoId","data","isOn","onToggle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/components/complete-toggle.component.tsx"],"sourcesContent":["import React from 'react';\nimport { ToggleButton } from './toggle.component';\nimport { TodoProps } from '../types/todo.types';\nimport { useUpdateTodo } from '../../../utils/useUpdateTodo';\n\nexport const CompleteToggle = ({ todo }: TodoProps) => {\n  console.log(todo.todo);\n  const { updateTodoMutation } = useUpdateTodo();\n  const completeToggle = async () => {\n    const { id } = todo;\n    todo.isCompleted = !todo.isCompleted;\n    updateTodoMutation.mutate({ todoId: id, data: todo });\n  };\n\n  return <ToggleButton isOn={todo.isCompleted} onToggle={completeToggle} />;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,SAASC,aAAa,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,OAAO,MAAMC,cAAc,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EAChDG,OAAO,CAACC,GAAG,CAACF,IAAI,CAACA,IAAI,CAAC;EACtB,MAAM;IAAEG;EAAmB,CAAC,GAAGT,aAAa,EAAE;EAC9C,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAM;MAAEC;IAAG,CAAC,GAAGL,IAAI;IACnBA,IAAI,CAACM,WAAW,GAAG,CAACN,IAAI,CAACM,WAAW;IACpCH,kBAAkB,CAACI,MAAM,CAAC;MAAEC,MAAM,EAAEH,EAAE;MAAEI,IAAI,EAAET;IAAK,CAAC,CAAC;EACvD,CAAC;EAED,oBAAOJ,OAAA,CAACH,YAAY;IAACiB,IAAI,EAAEV,IAAI,CAACM,WAAY;IAACK,QAAQ,EAAEP;EAAe;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC3E,CAAC;AAAChB,EAAA,CAVWF,cAAc;EAAA,QAEMH,aAAa;AAAA;AAAAsB,EAAA,GAFjCnB,cAAc;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}