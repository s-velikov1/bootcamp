{"ast":null,"code":"import axios from 'axios';\nexport class HttpService {\n  constructor() {\n    let baseUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : process.env.REACT_APP_SERVER_URL;\n    let fetchingService = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : axios;\n    this.baseUrl = void 0;\n    this.fetchingService = void 0;\n    this.baseUrl = baseUrl || '';\n    this.fetchingService = fetchingService;\n    console.log(this);\n  }\n  getFullApiUrl(url) {\n    return `${this.baseUrl}/api${url}`;\n  }\n  extractUrlAndDataFromConfig(config) {\n    const {\n      data,\n      url,\n      ...configWithoutDataAndUrl\n    } = config;\n    return configWithoutDataAndUrl;\n  }\n  get(config) {\n    let withAuth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (withAuth) {\n      config.headers = {\n        ...config.headers\n      };\n    }\n    return this.fetchingService.get(this.getFullApiUrl(config.url), this.extractUrlAndDataFromConfig(config));\n  }\n  post(config) {\n    let withAuth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (withAuth) {\n      config.headers = {\n        ...config.headers\n      };\n    }\n    return this.fetchingService.post(this.getFullApiUrl(config.url), config.data, this.extractUrlAndDataFromConfig(config));\n  }\n  put(config) {\n    let withAuth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (withAuth) {\n      config.headers = {\n        ...config.headers\n      };\n    }\n    return this.fetchingService.put(this.getFullApiUrl(config.url), config.data, this.extractUrlAndDataFromConfig(config));\n  }\n  delete(config) {\n    let withAuth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (withAuth) {\n      config.headers = {\n        ...config.headers\n      };\n    }\n    return this.fetchingService.delete(this.getFullApiUrl(config.url), this.extractUrlAndDataFromConfig(config));\n  }\n}","map":{"version":3,"names":["axios","HttpService","constructor","baseUrl","arguments","length","undefined","process","env","REACT_APP_SERVER_URL","fetchingService","console","log","getFullApiUrl","url","extractUrlAndDataFromConfig","config","data","configWithoutDataAndUrl","get","withAuth","headers","post","put","delete"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/services/HttpService.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, Axios } from 'axios';\n\nexport type HttpConfig = AxiosRequestConfig & { url: string };\n\nexport class HttpService {\n  public baseUrl: string;\n\n  public fetchingService: Axios;\n\n  constructor(baseUrl = process.env.REACT_APP_SERVER_URL, fetchingService = axios) {\n    this.baseUrl = baseUrl || '';\n    this.fetchingService = fetchingService;\n    console.log(this);\n  }\n\n  private getFullApiUrl(url: string): string {\n    return `${this.baseUrl}/api${url}`;\n  }\n\n  private extractUrlAndDataFromConfig(config: HttpConfig) {\n    const { data, url, ...configWithoutDataAndUrl } = config;\n    return configWithoutDataAndUrl;\n  }\n\n  get(config: HttpConfig, withAuth = true) {\n    if (withAuth) {\n      config.headers = {\n        ...config.headers\n      };\n    }\n    return this.fetchingService.get(\n      this.getFullApiUrl(config.url),\n      this.extractUrlAndDataFromConfig(config)\n    );\n  }\n\n  public post(config: HttpConfig, withAuth = true) {\n    if (withAuth) {\n      config.headers = {\n        ...config.headers\n      };\n    }\n    return this.fetchingService.post(\n      this.getFullApiUrl(config.url),\n      config.data,\n      this.extractUrlAndDataFromConfig(config)\n    );\n  }\n\n  put(config: HttpConfig, withAuth = true) {\n    if (withAuth) {\n      config.headers = {\n        ...config.headers\n      };\n    }\n    return this.fetchingService.put(\n      this.getFullApiUrl(config.url),\n      config.data,\n      this.extractUrlAndDataFromConfig(config)\n    );\n  }\n\n  delete(config: HttpConfig, withAuth = true) {\n    if (withAuth) {\n      config.headers = {\n        ...config.headers\n      };\n    }\n    return this.fetchingService.delete(\n      this.getFullApiUrl(config.url),\n      this.extractUrlAndDataFromConfig(config)\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}