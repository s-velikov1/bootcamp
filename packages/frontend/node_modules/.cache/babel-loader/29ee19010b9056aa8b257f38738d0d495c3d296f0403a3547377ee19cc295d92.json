{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/components/complete-toggle.component.tsx\";\nimport React from 'react';\nimport { ToggleButton } from './toggle.component';\n// import { defaultTodoService } from '../services/todo.service';\nimport { useUpdateTodo } from '../../../utils/useUpdateTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompleteToggle = _ref => {\n  var _s = $RefreshSig$();\n  let {\n    todo\n  } = _ref;\n  const completeToggle = async () => {\n    _s();\n    const {\n      id\n    } = todo;\n    todo.isCompleted = !todo.isCompleted;\n    // await defaultTodoService.updateTodo(id, todo);\n    const {\n      updateTodoMutation\n    } = useUpdateTodo();\n    updateTodoMutation.mutate({\n      todoId: id,\n      data: todo\n    });\n  };\n  _s(completeToggle, \"N6UpypJe4ZpPKjPivaWuYcj0hXc=\", false, function () {\n    return [useUpdateTodo];\n  });\n  return /*#__PURE__*/_jsxDEV(ToggleButton, {\n    isOn: todo.isCompleted,\n    onToggle: completeToggle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n_c = CompleteToggle;\nvar _c;\n$RefreshReg$(_c, \"CompleteToggle\");","map":{"version":3,"names":["React","ToggleButton","useUpdateTodo","jsxDEV","_jsxDEV","CompleteToggle","_ref","_s","$RefreshSig$","todo","completeToggle","id","isCompleted","updateTodoMutation","mutate","todoId","data","isOn","onToggle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/components/complete-toggle.component.tsx"],"sourcesContent":["import React from 'react';\nimport { ToggleButton } from './toggle.component';\nimport { TodoProps } from '../types/todo.types';\n// import { defaultTodoService } from '../services/todo.service';\nimport { useUpdateTodo } from '../../../utils/useUpdateTodo';\n\nexport const CompleteToggle = ({ todo }: TodoProps) => {\n  const completeToggle = async () => {\n    const { id } = todo;\n    todo.isCompleted = !todo.isCompleted;\n    // await defaultTodoService.updateTodo(id, todo);\n    const { updateTodoMutation } = useUpdateTodo();\n    updateTodoMutation.mutate({ todoId: id, data: todo });\n  };\n\n  return <ToggleButton isOn={todo.isCompleted} onToggle={completeToggle} />;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,oBAAoB;AAEjD;AACA,SAASC,aAAa,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,OAAO,MAAMC,cAAc,GAAGC,IAAA,IAAyB;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAH,IAAA;EAChD,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;IAAAH,EAAA;IACjC,MAAM;MAAEI;IAAG,CAAC,GAAGF,IAAI;IACnBA,IAAI,CAACG,WAAW,GAAG,CAACH,IAAI,CAACG,WAAW;IACpC;IACA,MAAM;MAAEC;IAAmB,CAAC,GAAGX,aAAa,EAAE;IAC9CW,kBAAkB,CAACC,MAAM,CAAC;MAAEC,MAAM,EAAEJ,EAAE;MAAEK,IAAI,EAAEP;IAAK,CAAC,CAAC;EACvD,CAAC;EAACF,EAAA,CANIG,cAAc;IAAA,QAIaR,aAAa;EAAA;EAI9C,oBAAOE,OAAA,CAACH,YAAY;IAACgB,IAAI,EAAER,IAAI,CAACG,WAAY;IAACM,QAAQ,EAAER;EAAe;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC3E,CAAC;AAACC,EAAA,GAVWlB,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}