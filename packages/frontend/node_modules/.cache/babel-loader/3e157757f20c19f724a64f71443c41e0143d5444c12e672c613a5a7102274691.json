{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n// import { useQuery } from 'react-query';\nimport { ROUTER_KEYS } from '../modules/common/consts/app-keys.const';\nimport { defaultAuthService } from '../modules/auth/services/auth.service';\nexport const useAuth = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const login = async authData => {\n    const data = await defaultAuthService.login(authData);\n    console.log(data);\n    localStorage.setItem(ROUTER_KEYS.LOGIN_TOKEN_NAME, data === null || data === void 0 ? void 0 : data.data.token);\n    setIsLoggedIn(true);\n  };\n  const logout = () => {\n    localStorage.removeItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    setIsLoggedIn(false);\n  };\n  const checkAuth = async () => {\n    const data = await defaultAuthService.checkAuth();\n    console.log(data);\n    if (data.status === 200) {\n      return true;\n    }\n    return false;\n  };\n  return {\n    isLoggedIn,\n    login,\n    logout,\n    checkAuth\n  };\n};\n_s(useAuth, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");","map":{"version":3,"names":["useState","useEffect","ROUTER_KEYS","defaultAuthService","useAuth","_s","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","LOGIN_TOKEN_NAME","login","authData","data","console","log","setItem","logout","removeItem","checkAuth","status"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/utils/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n// import { useQuery } from 'react-query';\nimport { ROUTER_KEYS } from '../modules/common/consts/app-keys.const';\nimport { defaultAuthService } from '../modules/auth/services/auth.service';\n\nexport const useAuth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const login = async (authData: object) => {\n    const data = await defaultAuthService.login(authData);\n    console.log(data);\n    localStorage.setItem(ROUTER_KEYS.LOGIN_TOKEN_NAME, data?.data.token);\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    setIsLoggedIn(false);\n  };\n\n  const checkAuth = async () => {\n    const data = await defaultAuthService.checkAuth();\n    console.log(data);\n\n    if (data.status === 200) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return { isLoggedIn, login, logout, checkAuth };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA,SAASC,WAAW,QAAQ,yCAAyC;AACrE,SAASC,kBAAkB,QAAQ,uCAAuC;AAE1E,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACR,WAAW,CAACS,gBAAgB,CAAC;IAChE,IAAIH,KAAK,EAAE;MACTD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG,MAAOC,QAAgB,IAAK;IACxC,MAAMC,IAAI,GAAG,MAAMX,kBAAkB,CAACS,KAAK,CAACC,QAAQ,CAAC;IACrDE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBL,YAAY,CAACQ,OAAO,CAACf,WAAW,CAACS,gBAAgB,EAAEG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAACN,KAAK,CAAC;IACpED,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBT,YAAY,CAACU,UAAU,CAACjB,WAAW,CAACS,gBAAgB,CAAC;IACrDJ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMN,IAAI,GAAG,MAAMX,kBAAkB,CAACiB,SAAS,EAAE;IACjDL,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjB,IAAIA,IAAI,CAACO,MAAM,KAAK,GAAG,EAAE;MACvB,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAED,OAAO;IAAEf,UAAU;IAAEM,KAAK;IAAEM,MAAM;IAAEE;EAAU,CAAC;AACjD,CAAC;AAACf,EAAA,CAlCWD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}