{"ast":null,"code":"import { HttpService } from '../../../services/http.service';\nexport class AuthService extends HttpService {\n  async login(data) {\n    const config = {\n      url: '/auth/login',\n      method: 'POST',\n      data\n    };\n    return this.post(config);\n  }\n  async register(data) {\n    const config = {\n      url: '/user',\n      method: 'POST',\n      data\n    };\n    return this.post(config);\n  }\n  async resetPassword(data) {\n    const config = {\n      url: '/auth/forgot-password',\n      method: 'POST',\n      data\n    };\n    return this.post(config);\n  }\n  async getCurrentUser() {\n    const config = {\n      url: '/user/current',\n      method: 'GET',\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n    return this.get(config);\n  }\n  async checkAuth() {\n    const config = {\n      url: '/auth',\n      method: 'GET',\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n    return this.get(config);\n  }\n}\nexport const defaultAuthService = new AuthService();","map":{"version":3,"names":["HttpService","AuthService","login","data","config","url","method","post","register","resetPassword","getCurrentUser","headers","Authorization","getAuthToken","get","checkAuth","defaultAuthService"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/auth/services/auth.service.ts"],"sourcesContent":["import { HttpService, HttpConfig } from '../../../services/http.service';\n\nexport class AuthService extends HttpService {\n  async login(data: object) {\n    const config: HttpConfig = {\n      url: '/auth/login',\n      method: 'POST',\n      data\n    };\n\n    return this.post(config);\n  }\n\n  async register(data: object) {\n    const config: HttpConfig = {\n      url: '/user',\n      method: 'POST',\n      data\n    };\n\n    return this.post(config);\n  }\n\n  async resetPassword(data: object) {\n    const config: HttpConfig = {\n      url: '/auth/forgot-password',\n      method: 'POST',\n      data\n    };\n\n    return this.post(config);\n  }\n\n  async getCurrentUser() {\n    const config: HttpConfig = {\n      url: '/user/current',\n      method: 'GET',\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n\n    return this.get(config);\n  }\n\n  async checkAuth() {\n    const config: HttpConfig = {\n      url: '/auth',\n      method: 'GET',\n      headers: {\n        Authorization: this.getAuthToken()\n      }\n    };\n\n    return this.get(config);\n  }\n}\n\nexport const defaultAuthService = new AuthService();\n"],"mappings":"AAAA,SAASA,WAAW,QAAoB,gCAAgC;AAExE,OAAO,MAAMC,WAAW,SAASD,WAAW,CAAC;EAC3C,MAAME,KAAKA,CAACC,IAAY,EAAE;IACxB,MAAMC,MAAkB,GAAG;MACzBC,GAAG,EAAE,aAAa;MAClBC,MAAM,EAAE,MAAM;MACdH;IACF,CAAC;IAED,OAAO,IAAI,CAACI,IAAI,CAACH,MAAM,CAAC;EAC1B;EAEA,MAAMI,QAAQA,CAACL,IAAY,EAAE;IAC3B,MAAMC,MAAkB,GAAG;MACzBC,GAAG,EAAE,OAAO;MACZC,MAAM,EAAE,MAAM;MACdH;IACF,CAAC;IAED,OAAO,IAAI,CAACI,IAAI,CAACH,MAAM,CAAC;EAC1B;EAEA,MAAMK,aAAaA,CAACN,IAAY,EAAE;IAChC,MAAMC,MAAkB,GAAG;MACzBC,GAAG,EAAE,uBAAuB;MAC5BC,MAAM,EAAE,MAAM;MACdH;IACF,CAAC;IAED,OAAO,IAAI,CAACI,IAAI,CAACH,MAAM,CAAC;EAC1B;EAEA,MAAMM,cAAcA,CAAA,EAAG;IACrB,MAAMN,MAAkB,GAAG;MACzBC,GAAG,EAAE,eAAe;MACpBC,MAAM,EAAE,KAAK;MACbK,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACC,YAAY;MAClC;IACF,CAAC;IAED,OAAO,IAAI,CAACC,GAAG,CAACV,MAAM,CAAC;EACzB;EAEA,MAAMW,SAASA,CAAA,EAAG;IAChB,MAAMX,MAAkB,GAAG;MACzBC,GAAG,EAAE,OAAO;MACZC,MAAM,EAAE,KAAK;MACbK,OAAO,EAAE;QACPC,aAAa,EAAE,IAAI,CAACC,YAAY;MAClC;IACF,CAAC;IAED,OAAO,IAAI,CAACC,GAAG,CAACV,MAAM,CAAC;EACzB;AACF;AAEA,OAAO,MAAMY,kBAAkB,GAAG,IAAIf,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}