{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQueryClient, useQuery } from 'react-query';\nimport { TodoService } from '../../../../services/TodoService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoService = new TodoService();\nexport default function TodoPageContainer() {\n  _s();\n  const location = useLocation();\n  const {\n    todoId\n  } = location.state;\n  console.log(location.state);\n  const [todo, setTodo] = useState(null);\n  const queryClient = useQueryClient();\n  const updateTodo = async updatedTodo => {\n    await todoService.updateTodo(todo.id, updatedTodo);\n  };\n  const fetchTodo = async () => {\n    const {\n      data\n    } = await todoService.getById(todoId);\n    console.log(data);\n    return data;\n  };\n  const {\n    data,\n    isLoading\n  } = useQuery('todo', fetchTodo);\n\n  // useEffect(() => {\n  //   const update = async () => {\n  //     await updateTodo(todo);\n  //   };\n  //   update();\n  // }, [todo]);\n\n  // invalidateQuery(QUERY_KEYS.TODOS);\n  const privateToggle = async () => {\n    console.log('private toggle');\n    const updatedTodo = {\n      ...todo\n    };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    setTodo(updatedTodo);\n  };\n  const completeToggle = () => console.log('complete toggle');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.todo.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 47\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n_s(TodoPageContainer, \"Df5a7Kcf74T8ubvy7IsF+Vy2aJw=\", false, function () {\n  return [useLocation, useQueryClient, useQuery];\n});\n_c = TodoPageContainer;\nvar _c;\n$RefreshReg$(_c, \"TodoPageContainer\");","map":{"version":3,"names":["React","useState","useLocation","useQueryClient","useQuery","TodoService","jsxDEV","_jsxDEV","todoService","TodoPageContainer","_s","location","todoId","state","console","log","todo","setTodo","queryClient","updateTodo","updatedTodo","id","fetchTodo","data","getById","isLoading","privateToggle","isPrivate","completeToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQueryClient, useQuery } from 'react-query';\nimport { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\nimport { invalidateQuery } from '../../../../utils/invalidateQuery';\nimport { QUERY_KEYS } from '../../consts/app-keys.const';\n\nconst todoService = new TodoService();\n\nexport default function TodoPageContainer() {\n  const location = useLocation();\n  const { todoId } = location.state;\n  console.log(location.state);\n  const [todo, setTodo] = useState<any>(null);\n  const queryClient = useQueryClient();\n\n  const updateTodo = async (updatedTodo: any) => {\n    await todoService.updateTodo(todo.id, updatedTodo);\n  };\n\n  const fetchTodo = async () => {\n    const { data } = await todoService.getById(todoId);\n    console.log(data);\n\n    return data;\n  };\n\n  const { data, isLoading } = useQuery('todo', fetchTodo);\n\n  // useEffect(() => {\n  //   const update = async () => {\n  //     await updateTodo(todo);\n  //   };\n  //   update();\n  // }, [todo]);\n\n  // invalidateQuery(QUERY_KEYS.TODOS);\n  const privateToggle = async () => {\n    console.log('private toggle');\n    const updatedTodo = { ...todo };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    setTodo(updatedTodo);\n  };\n  const completeToggle = () => console.log('complete toggle');\n\n  return <div>{isLoading ? <p>Loading..</p> : <p>{data.todo.id}</p>}</div>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,EAAEC,QAAQ,QAAQ,aAAa;AAEtD,SAASC,WAAW,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/D,MAAMC,WAAW,GAAG,IAAIH,WAAW,EAAE;AAErC,eAAe,SAASI,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAM;IAAEU;EAAO,CAAC,GAAGD,QAAQ,CAACE,KAAK;EACjCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,KAAK,CAAC;EAC3B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAM,IAAI,CAAC;EAC3C,MAAMiB,WAAW,GAAGf,cAAc,EAAE;EAEpC,MAAMgB,UAAU,GAAG,MAAOC,WAAgB,IAAK;IAC7C,MAAMZ,WAAW,CAACW,UAAU,CAACH,IAAI,CAACK,EAAE,EAAED,WAAW,CAAC;EACpD,CAAC;EAED,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,WAAW,CAACgB,OAAO,CAACZ,MAAM,CAAC;IAClDE,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;IAEjB,OAAOA,IAAI;EACb,CAAC;EAED,MAAM;IAAEA,IAAI;IAAEE;EAAU,CAAC,GAAGrB,QAAQ,CAAC,MAAM,EAAEkB,SAAS,CAAC;;EAEvD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,MAAMK,WAAW,GAAG;MAAE,GAAGJ;IAAK,CAAC;IAC/BI,WAAW,CAACO,SAAS,GAAG,CAACP,WAAW,CAACO,SAAS;IAC9CV,OAAO,CAACG,WAAW,CAAC;EACtB,CAAC;EACD,MAAMQ,cAAc,GAAGA,CAAA,KAAMd,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAE3D,oBAAOR,OAAA;IAAAsB,QAAA,EAAMJ,SAAS,gBAAGlB,OAAA;MAAAsB,QAAA,EAAG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAAG1B,OAAA;MAAAsB,QAAA,EAAIN,IAAI,CAACP,IAAI,CAACK;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC1E;AAACvB,EAAA,CArCuBD,iBAAiB;EAAA,QACtBP,WAAW,EAIRC,cAAc,EAaNC,QAAQ;AAAA;AAAA8B,EAAA,GAlBdzB,iBAAiB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}