{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/auth/forms/forget-password-form.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { StyledAuthFormContainer } from '../containers/auth-form.container.styled';\nimport { forgetPasswordValues } from './init-values';\nimport { forgetPasswordValidation } from './validation/forget-password-validation';\nimport { useAuth } from '../../../utils/useAuth';\nimport { ROUTER_KEYS } from '../../common/consts/app-keys.const';\nimport BackButton from '../../common/components/back-button.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgetPasswordFormComponent = () => {\n  _s();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submissionError, setSubmissionError] = useState(null);\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n  const navigate = useNavigate();\n  const {\n    resetPassword\n  } = useAuth();\n  const onSubmit = async (values, actions) => {\n    actions.setSubmitting(true);\n    try {\n      await resetPassword(values);\n      actions.resetForm();\n      setSubmissionSuccess(true);\n      actions.setStatus(null);\n      navigate(ROUTER_KEYS.LOGIN);\n    } catch (error) {\n      if (error instanceof Error) {\n        setSubmissionError(error.message);\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledAuthFormContainer, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: forgetPasswordValues,\n      validationSchema: forgetPasswordValidation,\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), submissionSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Password reset link sent to your email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this), submissionError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error ocurred while reset password! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 51\n          }, this), \" \", submissionError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            children: isSubmitting ? 'Submitting' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgetPasswordFormComponent, \"79O20oUU3NjOMqLGjBycm9hSJUo=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ForgetPasswordFormComponent;\nexport default ForgetPasswordFormComponent;\nvar _c;\n$RefreshReg$(_c, \"ForgetPasswordFormComponent\");","map":{"version":3,"names":["React","useState","Formik","Field","Form","ErrorMessage","Button","useNavigate","StyledAuthFormContainer","forgetPasswordValues","forgetPasswordValidation","useAuth","ROUTER_KEYS","BackButton","jsxDEV","_jsxDEV","ForgetPasswordFormComponent","_s","isSubmitting","setIsSubmitting","submissionError","setSubmissionError","submissionSuccess","setSubmissionSuccess","navigate","resetPassword","onSubmit","values","actions","setSubmitting","resetForm","setStatus","LOGIN","error","Error","message","children","initialValues","validationSchema","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","component","className","variant","type","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/auth/forms/forget-password-form.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage, FormikHelpers } from 'formik';\nimport { Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { StyledAuthFormContainer } from '../containers/auth-form.container.styled';\nimport { forgetPasswordValues } from './init-values';\nimport { forgetPasswordValidation } from './validation/forget-password-validation';\nimport { useAuth } from '../../../utils/useAuth';\nimport { IForgetPassword } from '../types/auth.types';\nimport { ROUTER_KEYS } from '../../common/consts/app-keys.const';\nimport BackButton from '../../common/components/back-button.component';\n\nconst ForgetPasswordFormComponent = () => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submissionError, setSubmissionError] = useState<string | null>(null);\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n\n  const navigate = useNavigate();\n\n  const { resetPassword } = useAuth();\n\n  const onSubmit = async (values: IForgetPassword, actions: FormikHelpers<IForgetPassword>) => {\n    actions.setSubmitting(true);\n    try {\n      await resetPassword(values);\n      actions.resetForm();\n      setSubmissionSuccess(true);\n      actions.setStatus(null);\n      navigate(ROUTER_KEYS.LOGIN);\n    } catch (error) {\n      if (error instanceof Error) {\n        setSubmissionError(error.message);\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <StyledAuthFormContainer>\n      <Formik\n        initialValues={forgetPasswordValues}\n        validationSchema={forgetPasswordValidation}\n        onSubmit={onSubmit}\n      >\n        <Form>\n          <label htmlFor=\"email\">Email</label>\n          <Field id=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          {submissionSuccess && <div>Password reset link sent to your email address</div>}\n          {submissionError && (\n            <div>\n              Error ocurred while reset password! <br /> {submissionError}\n            </div>\n          )}\n\n          <div className=\"actions\">\n            <BackButton />\n            <Button variant=\"contained\" type=\"submit\">\n              {isSubmitting ? 'Submitting' : 'Submit'}\n            </Button>\n          </div>\n        </Form>\n      </Formik>\n    </StyledAuthFormContainer>\n  );\n};\n\nexport default ForgetPasswordFormComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}