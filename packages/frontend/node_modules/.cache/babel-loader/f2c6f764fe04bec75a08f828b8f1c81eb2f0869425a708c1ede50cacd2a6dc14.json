{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/forms/create-todo-form.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { FormContainer } from './form.container.styled';\nimport { createTodoValidation } from './validation/todo-validation';\nimport { defaultTodoService } from '../services/todo.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTodoForm = () => {\n  _s();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submissionError, setSubmissionError] = useState(null);\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n  const onSubmit = async (values, _ref) => {\n    let {\n      resetForm,\n      setStatus,\n      setSubmitting\n    } = _ref;\n    setSubmitting(true);\n    try {\n      await defaultTodoService.createTodo(values);\n      resetForm();\n      setSubmissionSuccess(true);\n      setStatus(null);\n    } catch (error) {\n      if (error instanceof Error) {\n        setSubmissionError(error.message);\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      title: '',\n      description: '',\n      isCompleted: false,\n      isPrivate: false\n    },\n    validationSchema: createTodoValidation,\n    onSubmit: async (values, _ref2) => {\n      let {\n        resetForm,\n        setStatus,\n        setSubmitting\n      } = _ref2;\n      setSubmitting(true);\n      try {\n        await defaultTodoService.createTodo(values);\n        resetForm();\n        setSubmissionSuccess(true);\n        setStatus(null);\n      } catch (error) {\n        if (error instanceof Error) {\n          setSubmissionError(error.message);\n        }\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"Type title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"description\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"description\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isCompleted\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"isCompleted\",\n          name: \"isCompleted\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isPrivate\",\n          children: \"Private\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"isPrivate\",\n          name: \"isPrivate\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), submissionSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Todo created successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this), submissionError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error ocurred while creating todo! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 50\n          }, this), \" \", submissionError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isSubmitting ? 'Creating...' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTodoForm, \"6EQ3lCWSzruYrVO2e7OQChv6uHc=\");\n_c = CreateTodoForm;\nexport default CreateTodoForm;\nvar _c;\n$RefreshReg$(_c, \"CreateTodoForm\");","map":{"version":3,"names":["React","useState","Formik","Field","Form","ErrorMessage","FormContainer","createTodoValidation","defaultTodoService","jsxDEV","_jsxDEV","CreateTodoForm","_s","isSubmitting","setIsSubmitting","submissionError","setSubmissionError","submissionSuccess","setSubmissionSuccess","onSubmit","values","_ref","resetForm","setStatus","setSubmitting","createTodo","error","Error","message","initialValues","title","description","isCompleted","isPrivate","validationSchema","_ref2","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","placeholder","component","type","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/forms/create-todo-form.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { FormContainer } from './form.container.styled';\nimport { createTodoValidation } from './validation/todo-validation';\nimport { defaultTodoService } from '../services/todo.service';\n\ntype Values = {\n  title: string;\n  description: string;\n  isCompleted: boolean,\n  isPrivate: boolean;\n}\n\nconst CreateTodoForm = () => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submissionError, setSubmissionError] = useState<string | null>(null);\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n\n  const onSubmit = async (values: Values, { resetForm, setStatus, setSubmitting }) => {\n    setSubmitting(true);\n        try {\n          await defaultTodoService.createTodo(values);\n          resetForm();\n          setSubmissionSuccess(true);\n          setStatus(null);\n        } catch (error) {\n          if (error instanceof Error) {\n            setSubmissionError(error.message);\n          }\n        } finally {\n          setIsSubmitting(false);\n        }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        description: '',\n        isCompleted: false,\n        isPrivate: false\n      }}\n      validationSchema={createTodoValidation}\n      onSubmit={async (values, { resetForm, setStatus, setSubmitting }) => {\n        setSubmitting(true);\n        try {\n          await defaultTodoService.createTodo(values);\n          resetForm();\n          setSubmissionSuccess(true);\n          setStatus(null);\n        } catch (error) {\n          if (error instanceof Error) {\n            setSubmissionError(error.message);\n          }\n        } finally {\n          setIsSubmitting(false);\n        }\n      }}\n    >\n      <FormContainer>\n        <Form>\n          <label htmlFor=\"title\">Title</label>\n          <Field id=\"title\" name=\"title\" placeholder=\"Type title\" />\n          <ErrorMessage name=\"title\" component=\"div\" />\n\n          <label htmlFor=\"description\">Description</label>\n          <Field id=\"description\" name=\"description\" />\n          <ErrorMessage name=\"description\" component=\"div\" />\n\n          <label htmlFor=\"isCompleted\">Completed</label>\n          <Field id=\"isCompleted\" name=\"isCompleted\" type=\"checkbox\" />\n\n          <label htmlFor=\"isPrivate\">Private</label>\n          <Field id=\"isPrivate\" name=\"isPrivate\" type=\"checkbox\" />\n\n          {submissionSuccess && <div>Todo created successfully</div>}\n          {submissionError && (\n            <div>\n              Error ocurred while creating todo! <br /> {submissionError}\n            </div>\n          )}\n\n          <button type=\"submit\">{isSubmitting ? 'Creating...' : 'Create'}</button>\n        </Form>\n      </FormContainer>\n    </Formik>\n  );\n};\n\nexport default CreateTodoForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}