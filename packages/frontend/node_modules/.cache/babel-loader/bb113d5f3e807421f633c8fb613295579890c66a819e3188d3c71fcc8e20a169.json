{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQueryClient, useMutation } from 'react-query';\nimport { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\n// import { invalidateQuery } from '../../../../utils/invalidateQuery';\nimport { QUERY_KEYS } from '../../consts/app-keys.const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst todoService = new TodoService();\nexport default function TodoPageContainer() {\n  _s2();\n  var _s = $RefreshSig$();\n  const location = useLocation();\n  const {\n    todo\n  } = location.state;\n  const queryClient = useQueryClient();\n  const privateToggle = async () => {\n    _s();\n    console.log('private toggle');\n    const updatedTodo = {\n      ...todo\n    };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    const updateTodo = async () => {\n      await todoService.updateTodo(todo.id, updatedTodo);\n    };\n    const mutation = useMutation(updateTodo, {\n      onSuccess: () => {\n        queryClient.invalidateQueries(QUERY_KEYS.TODOS);\n      }\n    });\n    mutation.mutate(todo.id);\n  };\n  _s(privateToggle, \"Kvw+Q3+Z705KOo+cvu2gXTQDxwg=\", false, function () {\n    return [useMutation];\n  });\n  const completeToggle = () => console.log('complete toggle');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Complete: \", /*#__PURE__*/_jsxDEV(ToggleButton, {\n        isOn: todo.isPrivate,\n        onToggle: completeToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Private: \", /*#__PURE__*/_jsxDEV(ToggleButton, {\n        isOn: todo.isPrivate,\n        onToggle: privateToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(TodoPageContainer, \"sFsY6CefGz7/2TATP55cjZ51mwA=\", false, function () {\n  return [useLocation, useQueryClient];\n});\n_c = TodoPageContainer;\nvar _c;\n$RefreshReg$(_c, \"TodoPageContainer\");","map":{"version":3,"names":["React","useLocation","useQueryClient","useMutation","ToggleButton","TodoService","QUERY_KEYS","jsxDEV","_jsxDEV","Fragment","_Fragment","todoService","TodoPageContainer","_s2","_s","$RefreshSig$","location","todo","state","queryClient","privateToggle","console","log","updatedTodo","isPrivate","updateTodo","id","mutation","onSuccess","invalidateQueries","TODOS","mutate","completeToggle","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","isOn","onToggle","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQueryClient, useMutation } from 'react-query';\nimport { ToggleButton } from './actions/toggle.styled';\nimport { TodoService } from '../../../../services/TodoService';\n// import { invalidateQuery } from '../../../../utils/invalidateQuery';\nimport { QUERY_KEYS } from '../../consts/app-keys.const';\n\nconst todoService = new TodoService();\n\nexport default function TodoPageContainer() {\n  const location = useLocation();\n  const { todo } = location.state;\n  const queryClient = useQueryClient();\n  const privateToggle = async () => {\n    console.log('private toggle');\n    const updatedTodo = { ...todo };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    const updateTodo = async () => {\n      await todoService.updateTodo(todo.id, updatedTodo);\n    };\n    const mutation = useMutation(updateTodo, {\n      onSuccess: () => {\n        queryClient.invalidateQueries(QUERY_KEYS.TODOS);\n      }\n    });\n    mutation.mutate(todo.id);\n  };\n  const completeToggle = () => console.log('complete toggle');\n\n  return (\n    <>\n      <h1>{todo.title}</h1>\n      <div>{todo.id}</div>\n      <div>{todo.description}</div>\n      <div>\n        Complete: <ToggleButton isOn={todo.isPrivate} onToggle={completeToggle} />\n      </div>\n      <div>\n        Private: <ToggleButton isOn={todo.isPrivate} onToggle={privateToggle} />\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}