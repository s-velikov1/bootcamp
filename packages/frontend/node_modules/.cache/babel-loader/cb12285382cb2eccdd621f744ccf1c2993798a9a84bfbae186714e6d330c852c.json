{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/todo-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQueryClient } from 'react-query';\n// import { defaultTodoService } from './services/todo.service';\nimport { QUERY_KEYS } from '../common/consts/app-keys.const';\nimport { CompleteToggle } from './components/complete-toggle.component';\nimport { PrivateToggle } from './components/private-toggle.component';\nimport BackButton from '../common/components/back-button.component';\nimport { StyledCreatePageContainer } from './containers/todo-create-page.container.styled';\nimport UpdateTodoForm from './forms/update-todo-form.component';\nimport EditButton from './components/edit-button-component';\nimport { useTodos } from '../../utils/useTodos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoPageContainer = () => {\n  _s();\n  const location = useLocation();\n  const {\n    todoId\n  } = location.state;\n  const [isEdit, setIsEdit] = useState(false);\n\n  // const fetchTodo = async () => {\n  //   const { data } = await defaultTodoService.getById(todoId);\n\n  //   return data.data.todo;\n  // };\n\n  // const { data, isLoading, refetch } = useQuery(QUERY_KEYS.TODOID, fetchTodo, {\n  //   enabled: true\n  // });\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isLoading\n  } = useTodos(todoId);\n  const [todo, setTodo] = useState(data);\n  useEffect(() => {\n    setTodo(data);\n  }, [data]);\n  useEffect(() => {\n    // refetch();\n    console.log('invalidate');\n    queryClient.invalidateQueries([QUERY_KEYS.TODOID]);\n  }, [todoId, isEdit]);\n  if (!todo) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledCreatePageContainer, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), !isLoading && !isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: todo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Complete:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(CompleteToggle, {\n          todo: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state\",\n        children: [\"Private: \", /*#__PURE__*/_jsxDEV(PrivateToggle, {\n          todo: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UpdateTodoForm, {\n      setter: setIsEdit,\n      todo: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n        className: \"edit-button\",\n        onClick: () => setIsEdit(!isEdit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoPageContainer, \"nhhCzL9kOwUaLduqBXd08yEmHqc=\", false, function () {\n  return [useLocation, useQueryClient, useTodos];\n});\n_c = TodoPageContainer;\nexport default TodoPageContainer;\nvar _c;\n$RefreshReg$(_c, \"TodoPageContainer\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useQueryClient","QUERY_KEYS","CompleteToggle","PrivateToggle","BackButton","StyledCreatePageContainer","UpdateTodoForm","EditButton","useTodos","jsxDEV","_jsxDEV","TodoPageContainer","_s","location","todoId","state","isEdit","setIsEdit","queryClient","data","isLoading","todo","setTodo","console","log","invalidateQueries","TODOID","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","setter","onClick","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/todo/todo-page.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\n// import { defaultTodoService } from './services/todo.service';\nimport { QUERY_KEYS } from '../common/consts/app-keys.const';\nimport { ITodo } from './types/todo.types';\nimport { CompleteToggle } from './components/complete-toggle.component';\nimport { PrivateToggle } from './components/private-toggle.component';\nimport BackButton from '../common/components/back-button.component';\nimport { StyledCreatePageContainer } from './containers/todo-create-page.container.styled';\nimport UpdateTodoForm from './forms/update-todo-form.component';\nimport EditButton from './components/edit-button-component';\nimport { useTodos } from '../../utils/useTodos';\n\nconst TodoPageContainer = () => {\n  const location = useLocation();\n  const { todoId } = location.state;\n  const [isEdit, setIsEdit] = useState(false);\n\n  // const fetchTodo = async () => {\n  //   const { data } = await defaultTodoService.getById(todoId);\n\n  //   return data.data.todo;\n  // };\n\n  // const { data, isLoading, refetch } = useQuery(QUERY_KEYS.TODOID, fetchTodo, {\n  //   enabled: true\n  // });\n  const queryClient = useQueryClient();\n  const { data, isLoading } = useTodos(todoId);\n  const [todo, setTodo] = useState<ITodo>(data);\n\n  useEffect(() => {\n    setTodo(data);\n  }, [data]);\n\n  useEffect(() => {\n    // refetch();\n    console.log('invalidate');\n    queryClient.invalidateQueries([QUERY_KEYS.TODOID]);\n  }, [todoId, isEdit]);\n\n  if (!todo) {\n    return <p>No data available</p>;\n  }\n\n  return (\n    <StyledCreatePageContainer>\n      {isLoading && <p>Loading..</p>}\n      {!isLoading && !isEdit ? (\n        <div className=\"inner\">\n          <h1 className=\"title\">{todo.title}</h1>\n          <div>Description:</div>\n          <div className=\"description\">{todo.description}</div>\n          <div className=\"state\">\n            <span>Complete:</span> <CompleteToggle todo={todo} />\n          </div>\n          <div className=\"state\">\n            Private: <PrivateToggle todo={todo} />\n          </div>\n        </div>\n      ) : (\n        <UpdateTodoForm setter={setIsEdit} todo={todo} />\n      )}\n      <div className=\"actions\">\n        <BackButton />\n        <EditButton className=\"edit-button\" onClick={() => setIsEdit(!isEdit)} />\n      </div>\n    </StyledCreatePageContainer>\n  );\n};\n\nexport default TodoPageContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}