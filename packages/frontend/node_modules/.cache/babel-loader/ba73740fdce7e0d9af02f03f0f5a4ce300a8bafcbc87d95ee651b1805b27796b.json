{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/navigation/index.tsx\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomePageContainer from '../todo';\nimport TodoPageContainer from '../todo/todo-page';\nimport CreateTodoPageContainer from '../todo/createTodo';\nimport AuthPageComponent from '../auth';\nimport LoginPageComponent from '../auth/login-page';\nimport RegisterPageComponent from '../auth/register-page';\nimport { APP_KEYS } from '../common/consts';\nimport RequireAuth from '../default/require-auth.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainRouter = () => /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(RequireAuth, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(HomePageContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this),\n        path: APP_KEYS.ROUTER_KEYS.ROOT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        Component: TodoPageContainer,\n        path: APP_KEYS.ROUTER_KEYS.TODO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        Component: CreateTodoPageContainer,\n        path: APP_KEYS.ROUTER_KEYS.CREATE_TODO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        Component: AuthPageComponent,\n        path: APP_KEYS.ROUTER_KEYS.AUTH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        Component: LoginPageComponent,\n        path: APP_KEYS.ROUTER_KEYS.LOGIN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        Component: RegisterPageComponent,\n        path: APP_KEYS.ROUTER_KEYS.REGISTER\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\n// export const MainRouter = () => (\n//   <Router>\n//     <Routes>\n//       <Route\n//         element={\n//           <RequireAuth>\n//             <HomePageContainer />\n//           </RequireAuth>\n//         }\n//         path={APP_KEYS.ROUTER_KEYS.ROOT}\n//       />\n//       <Route Component={TodoPageContainer} path={APP_KEYS.ROUTER_KEYS.TODO} />\n//       <Route Component={CreateTodoPageContainer} path={APP_KEYS.ROUTER_KEYS.CREATE_TODO} />\n//       <Route Component={AuthPageComponent} path={APP_KEYS.ROUTER_KEYS.AUTH} />\n//       <Route Component={LoginPageComponent} path={APP_KEYS.ROUTER_KEYS.LOGIN} />\n//       <Route Component={RegisterPageComponent} path={APP_KEYS.ROUTER_KEYS.REGISTER} />\n//     </Routes>\n//   </Router>\n// );\n_c = MainRouter;\nvar _c;\n$RefreshReg$(_c, \"MainRouter\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","HomePageContainer","TodoPageContainer","CreateTodoPageContainer","AuthPageComponent","LoginPageComponent","RegisterPageComponent","APP_KEYS","RequireAuth","jsxDEV","_jsxDEV","MainRouter","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","ROUTER_KEYS","ROOT","Component","TODO","CREATE_TODO","AUTH","LOGIN","REGISTER","_c","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/navigation/index.tsx"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomePageContainer from '../todo';\nimport TodoPageContainer from '../todo/todo-page';\nimport CreateTodoPageContainer from '../todo/createTodo';\nimport AuthPageComponent from '../auth';\nimport LoginPageComponent from '../auth/login-page';\nimport RegisterPageComponent from '../auth/register-page';\nimport { APP_KEYS } from '../common/consts';\nimport RequireAuth from '../default/require-auth.component';\n\nexport const MainRouter = () => (\n  <Router>\n    <RequireAuth>\n      <Routes>\n        <Route element={<HomePageContainer />} path={APP_KEYS.ROUTER_KEYS.ROOT} />\n        <Route Component={TodoPageContainer} path={APP_KEYS.ROUTER_KEYS.TODO} />\n        <Route Component={CreateTodoPageContainer} path={APP_KEYS.ROUTER_KEYS.CREATE_TODO} />\n        <Route Component={AuthPageComponent} path={APP_KEYS.ROUTER_KEYS.AUTH} />\n        <Route Component={LoginPageComponent} path={APP_KEYS.ROUTER_KEYS.LOGIN} />\n        <Route Component={RegisterPageComponent} path={APP_KEYS.ROUTER_KEYS.REGISTER} />\n      </Routes>\n    </RequireAuth>\n  </Router>\n);\n\n\n// export const MainRouter = () => (\n//   <Router>\n//     <Routes>\n//       <Route\n//         element={\n//           <RequireAuth>\n//             <HomePageContainer />\n//           </RequireAuth>\n//         }\n//         path={APP_KEYS.ROUTER_KEYS.ROOT}\n//       />\n//       <Route Component={TodoPageContainer} path={APP_KEYS.ROUTER_KEYS.TODO} />\n//       <Route Component={CreateTodoPageContainer} path={APP_KEYS.ROUTER_KEYS.CREATE_TODO} />\n//       <Route Component={AuthPageComponent} path={APP_KEYS.ROUTER_KEYS.AUTH} />\n//       <Route Component={LoginPageComponent} path={APP_KEYS.ROUTER_KEYS.LOGIN} />\n//       <Route Component={RegisterPageComponent} path={APP_KEYS.ROUTER_KEYS.REGISTER} />\n//     </Routes>\n//   </Router>\n// );\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,iBAAiB,MAAM,SAAS;AACvC,OAAOC,iBAAiB,MAAM,mBAAmB;AACjD,OAAOC,uBAAuB,MAAM,oBAAoB;AACxD,OAAOC,iBAAiB,MAAM,SAAS;AACvC,OAAOC,kBAAkB,MAAM,oBAAoB;AACnD,OAAOC,qBAAqB,MAAM,uBAAuB;AACzD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,WAAW,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,UAAU,GAAGA,CAAA,kBACxBD,OAAA,CAACZ,MAAM;EAAAc,QAAA,eACLF,OAAA,CAACF,WAAW;IAAAI,QAAA,eACVF,OAAA,CAACV,MAAM;MAAAY,QAAA,gBACLF,OAAA,CAACX,KAAK;QAACc,OAAO,eAAEH,OAAA,CAACT,iBAAiB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QAACC,IAAI,EAAEX,QAAQ,CAACY,WAAW,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1EP,OAAA,CAACX,KAAK;QAACsB,SAAS,EAAEnB,iBAAkB;QAACgB,IAAI,EAAEX,QAAQ,CAACY,WAAW,CAACG;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxEP,OAAA,CAACX,KAAK;QAACsB,SAAS,EAAElB,uBAAwB;QAACe,IAAI,EAAEX,QAAQ,CAACY,WAAW,CAACI;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrFP,OAAA,CAACX,KAAK;QAACsB,SAAS,EAAEjB,iBAAkB;QAACc,IAAI,EAAEX,QAAQ,CAACY,WAAW,CAACK;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxEP,OAAA,CAACX,KAAK;QAACsB,SAAS,EAAEhB,kBAAmB;QAACa,IAAI,EAAEX,QAAQ,CAACY,WAAW,CAACM;MAAM;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1EP,OAAA,CAACX,KAAK;QAACsB,SAAS,EAAEf,qBAAsB;QAACY,IAAI,EAAEX,QAAQ,CAACY,WAAW,CAACO;MAAS;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACzE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AACG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAEjB;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAU,EAAA,GAlCahB,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}