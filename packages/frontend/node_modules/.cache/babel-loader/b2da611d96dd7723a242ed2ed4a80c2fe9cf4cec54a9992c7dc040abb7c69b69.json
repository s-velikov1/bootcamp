{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/actions/toggle.styled.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = styled.label`\n  display: inline-block;\n  position: relative;\n  width: 48px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: ${_ref => {\n  let {\n    isOn\n  } = _ref;\n  return isOn ? '#6abf69' : '#ccc';\n}};\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: ${_ref2 => {\n  let {\n    isOn\n  } = _ref2;\n  return isOn ? '26px' : '2px';\n}};\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #fff;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    transition: left 0.3s ease;\n  }\n`;\n\n// const ToggleInput = styled.input.attrs({ type: 'checkbox' })`\n//   display: none;\n// `;\n_c = ToggleSwitch;\nexport default function ToggleButton() {\n  _s();\n  const [isOn, setIsOn] = useState(false);\n  const handleToggle = e => {\n    e.stopPropagation();\n    setIsOn(!isOn);\n    console.log('toggle');\n  };\n  return /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n    isOn: isOn,\n    onClick: handleToggle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleButton, \"781ncfT5EimMrsq5ZStDBlx1pwQ=\");\n_c2 = ToggleButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleSwitch\");\n$RefreshReg$(_c2, \"ToggleButton\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","ToggleSwitch","label","_ref","isOn","_ref2","_c","ToggleButton","_s","setIsOn","handleToggle","e","stopPropagation","console","log","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/actions/toggle.styled.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\ninterface ToggleSwitchProps {\n  isOn: boolean;\n}\n\nconst ToggleSwitch = styled.label<ToggleSwitchProps>`\n  display: inline-block;\n  position: relative;\n  width: 48px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: ${({ isOn }) => (isOn ? '#6abf69' : '#ccc')};\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: ${({ isOn }) => (isOn ? '26px' : '2px')};\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #fff;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    transition: left 0.3s ease;\n  }\n`;\n\n// const ToggleInput = styled.input.attrs({ type: 'checkbox' })`\n//   display: none;\n// `;\n\nexport default function ToggleButton() {\n  const [isOn, setIsOn] = useState(false);\n\n  const handleToggle = (e: React.MouseEvent<HTMLLabelElement>) => {\n    e.stopPropagation();\n    setIsOn(!isOn);\n    console.log('toggle');\n  };\n\n  return (\n    <ToggleSwitch isOn={isOn} onClick={handleToggle}>\n      {/* <ToggleInput type=\"checkbox\" checked={isOn} readOnly /> */}\n    </ToggleSwitch>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,KAAyB;AACrD;AACA;AACA;AACA;AACA;AACA,sBAAsBC,IAAA;EAAA,IAAC;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAAA,OAAMC,IAAI,GAAG,SAAS,GAAG,MAAM;AAAA,CAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYC,KAAA;EAAA,IAAC;IAAED;EAAK,CAAC,GAAAC,KAAA;EAAA,OAAMD,IAAI,GAAG,MAAM,GAAG,KAAK;AAAA,CAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AAAAE,EAAA,GA1BML,YAAY;AA4BlB,eAAe,SAASM,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACJ,IAAI,EAAEK,OAAO,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMa,YAAY,GAAIC,CAAqC,IAAK;IAC9DA,CAAC,CAACC,eAAe,EAAE;IACnBH,OAAO,CAAC,CAACL,IAAI,CAAC;IACdS,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC;EAED,oBACEd,OAAA,CAACC,YAAY;IAACG,IAAI,EAAEA,IAAK;IAACW,OAAO,EAAEL;EAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEjC;AAEnB;AAACX,EAAA,CAduBD,YAAY;AAAAa,GAAA,GAAZb,YAAY;AAAA,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}