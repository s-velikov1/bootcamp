{"ast":null,"code":"var _jsxFileName = \"/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { ToggleButton } from './actions/toggle.component';\nimport { TodoService } from '../../../../services/TodoService';\nimport { QUERY_KEYS } from '../../consts/app-keys.const';\nimport { CompleteToggle } from './actions/completeToggle.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoService = new TodoService();\nconst StyledContainer = styled.div`\n  max-width: 90%;\n  margin: 5% auto;\n\n  .title {\n    margin-bottom: 2%;\n  }\n\n  .description {\n    margin-top: 1%;\n    margin-left: 2%;\n    font-size: 16px;\n    font-weight: normal;\n    color: #555555;\n    line-height: 1.5;\n    padding: 8px 0;\n  }\n`;\n_c = StyledContainer;\nconst TodoPageContainer = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const location = useLocation();\n  const {\n    todoId\n  } = location.state;\n  const queryClient = useQueryClient();\n  const [state, setState] = useState(null);\n  const updateTodo = async updatedTodo => {\n    await todoService.updateTodo(todoId, updatedTodo);\n  };\n  const fetchTodo = async () => {\n    const {\n      data\n    } = await todoService.getById(todoId);\n    return data;\n  };\n\n  // const { data, isLoading } = useQuery(QUERY_KEYS.TODOID, fetchTodo, {\n  //   enabled: true\n  // });\n  const {\n    todo\n  } = data && data.data ? data.data : {};\n  console.log(todoId, '===');\n  const privateToggle = async () => {\n    const updatedTodo = {\n      ...todo\n    };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    await updateTodo(updatedTodo);\n  };\n\n  // const completeToggle = async () => {\n  //   const updatedTodo = { ...todo };\n  //   updatedTodo.isCompleted = !updatedTodo.isCompleted;\n  //   await updateTodo(updatedTodo);\n  // };\n\n  _s(useEffect(_s(() => {\n    _s();\n    const {\n      data,\n      isLoading\n    } = useQuery(QUERY_KEYS.TODOID, fetchTodo, {\n      enabled: true\n    });\n    setState(data.data.todo);\n  }, \"0VB955moqGTEiUXXbAcRWgIKjHQ=\", false, function () {\n    return [useQuery];\n  }), []), \"0VB955moqGTEiUXXbAcRWgIKjHQ=\", false, function () {\n    return [useQuery];\n  });\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.data.todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: todo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Complete: \", /*#__PURE__*/_jsxDEV(CompleteToggle, {\n          todo: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Private: \", /*#__PURE__*/_jsxDEV(ToggleButton, {\n          isOn: todo.isPrivate,\n          onToggle: privateToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s2(TodoPageContainer, \"6HndyuZrQZWBDho0CQbdII2X40w=\", false, function () {\n  return [useLocation, useQueryClient];\n});\n_c2 = TodoPageContainer;\nexport default TodoPageContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"TodoPageContainer\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useQuery","useQueryClient","styled","ToggleButton","TodoService","QUERY_KEYS","CompleteToggle","jsxDEV","_jsxDEV","todoService","StyledContainer","div","_c","TodoPageContainer","_s2","_s","$RefreshSig$","location","todoId","state","queryClient","setState","updateTodo","updatedTodo","fetchTodo","data","getById","todo","console","log","privateToggle","isPrivate","isLoading","TODOID","enabled","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","isOn","onToggle","_c2","$RefreshReg$"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/modules/common/components/todo/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { ToggleButton } from './actions/toggle.component';\nimport { TodoService } from '../../../../services/TodoService';\nimport { QUERY_KEYS } from '../../consts/app-keys.const';\nimport { ITodo } from '../../types/todo.types';\nimport { CompleteToggle } from './actions/completeToggle.component';\n\nconst todoService = new TodoService();\n\nconst StyledContainer = styled.div`\n  max-width: 90%;\n  margin: 5% auto;\n\n  .title {\n    margin-bottom: 2%;\n  }\n\n  .description {\n    margin-top: 1%;\n    margin-left: 2%;\n    font-size: 16px;\n    font-weight: normal;\n    color: #555555;\n    line-height: 1.5;\n    padding: 8px 0;\n  }\n`;\n\nconst TodoPageContainer = () => {\n  const location = useLocation();\n  const { todoId } = location.state;\n  const queryClient = useQueryClient();\n  const [state, setState] = useState(null);\n\n  const updateTodo = async (updatedTodo: ITodo) => {\n    await todoService.updateTodo(todoId, updatedTodo);\n  };\n\n  const fetchTodo = async () => {\n    const { data } = await todoService.getById(todoId);\n\n    return data;\n  };\n\n  // const { data, isLoading } = useQuery(QUERY_KEYS.TODOID, fetchTodo, {\n  //   enabled: true\n  // });\n  const { todo }: { todo: ITodo } = data && data.data ? data.data : {};\n  console.log(todoId, '===');\n\n  const privateToggle = async () => {\n    const updatedTodo = { ...todo };\n    updatedTodo.isPrivate = !updatedTodo.isPrivate;\n    await updateTodo(updatedTodo);\n  };\n\n  // const completeToggle = async () => {\n  //   const updatedTodo = { ...todo };\n  //   updatedTodo.isCompleted = !updatedTodo.isCompleted;\n  //   await updateTodo(updatedTodo);\n  // };\n\n  useEffect(() => {\n    const { data, isLoading } = useQuery(QUERY_KEYS.TODOID, fetchTodo, {\n      enabled: true\n    });\n    setState(data.data.todo);\n  }, []);\n\n  return (\n    <StyledContainer>\n      {isLoading ? (\n        <p>Loading..</p>\n      ) : (\n        <div className=\"inner\">\n          <div>{data.data.todo.title}</div>\n          <h1 className=\"title\">{todo.title}</h1>\n          <div>Description:</div>\n          <div className=\"description\">{todo.description}</div>\n          <div>\n            {/* Complete: <ToggleButton isOn={todo.isCompleted} onToggle={completeToggle} /> */}\n            Complete: <CompleteToggle todo={todo} />\n          </div>\n          <div>\n            Private: <ToggleButton isOn={todo.isPrivate} onToggle={privateToggle} />\n          </div>\n        </div>\n      )}\n    </StyledContainer>\n  );\n};\n\nexport default TodoPageContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}