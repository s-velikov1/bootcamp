{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { ROUTER_KEYS } from '../modules/common/consts/app-keys.const';\nimport { defaultAuthService } from '../modules/auth/services/auth.service';\nexport const useAuth = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const fetchLoginToken = async authData => {\n    if (authData) {\n      return defaultAuthService.login(authData);\n    }\n  };\n  const login = async authData => {\n    _s();\n    const {\n      data\n    } = useQuery('authToken', fetchLoginToken);\n    console.log(data);\n    localStorage.setItem(ROUTER_KEYS.LOGIN_TOKEN_NAME, data === null || data === void 0 ? void 0 : data.data.token);\n    setIsLoggedIn(true);\n  };\n  _s(login, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n    return [useQuery];\n  });\n  const logout = () => {\n    localStorage.removeItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    setIsLoggedIn(false);\n  };\n  return {\n    isLoggedIn,\n    login,\n    logout\n  };\n};\n_s2(useAuth, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");","map":{"version":3,"names":["useState","useEffect","useQuery","ROUTER_KEYS","defaultAuthService","useAuth","_s2","_s","$RefreshSig$","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","fetchLoginToken","authData","login","data","console","log","setItem","LOGIN_TOKEN_NAME","logout","removeItem"],"sources":["/home/stas/Bootcamp/cgs-team-camp/packages/frontend/src/utils/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { ROUTER_KEYS } from '../modules/common/consts/app-keys.const';\nimport { defaultAuthService } from '../modules/auth/services/auth.service';\n\nexport const useAuth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const fetchLoginToken = async (authData: object) => {\n    if (authData) {\n      return defaultAuthService.login(authData);\n    }\n  };\n\n  const login = async (authData: object) => {\n    const { data } = useQuery('authToken', fetchLoginToken);\n    console.log(data);\n    localStorage.setItem(ROUTER_KEYS.LOGIN_TOKEN_NAME, data?.data.token);\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(ROUTER_KEYS.LOGIN_TOKEN_NAME);\n    setIsLoggedIn(false);\n  };\n\n  return { isLoggedIn, login, logout };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,yCAAyC;AACrE,SAASC,kBAAkB,QAAQ,uCAAuC;AAE1E,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAIF,KAAK,EAAE;MACTD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,eAAe,GAAG,MAAOC,QAAgB,IAAK;IAClD,IAAIA,QAAQ,EAAE;MACZ,OAAOX,kBAAkB,CAACY,KAAK,CAACD,QAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMC,KAAK,GAAG,MAAOD,QAAgB,IAAK;IAAAR,EAAA;IACxC,MAAM;MAAEU;IAAK,CAAC,GAAGf,QAAQ,CAAC,WAAW,EAAEY,eAAe,CAAC;IACvDI,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBL,YAAY,CAACQ,OAAO,CAACjB,WAAW,CAACkB,gBAAgB,EAAEJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAACN,KAAK,CAAC;IACpED,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAACH,EAAA,CALIS,KAAK;IAAA,QACQd,QAAQ;EAAA;EAM3B,MAAMoB,MAAM,GAAGA,CAAA,KAAM;IACnBV,YAAY,CAACW,UAAU,CAACpB,WAAW,CAACkB,gBAAgB,CAAC;IACrDX,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,OAAO;IAAED,UAAU;IAAEO,KAAK;IAAEM;EAAO,CAAC;AACtC,CAAC;AAAChB,GAAA,CA7BWD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}